{"version":3,"sources":["store/reducers/notification.js","store/reducers/user.js","store/reducers/settings.js","store/reducer.js","store/Store.js","store/selectors/notification.js","store/selectors/settings.js","store/actions/user.js","api/api.js","api/index.js","store/actions/notification.js","pages/Login.js","store/selectors/user.js","components/Navbar.js","components/SideBarMenu.js","pages/BaseHome.js","services/Category/CategoryService.js","services/NecessityType/NecessityTypeService.js","pages/PublicHome.js","utils/utils.js","components/Category/CategoryTable.js","components/Category/CategoryForm.js","pages/Category.js","components/NecessityType/NecessityTypeTable.js","components/NecessityType/NecessityTypeForm.js","pages/NecessityType.js","components/Map/MapComponent.js","utils/constants.js","components/Necessity/NecessityForm.js","components/Necessity/NecessityTable.js","components/Necessity/Filter.js","pages/Necessity.js","services/Necessity/NecessityService.js","store/actions/settings.js","components/Settings/NavbarSettings.js","components/Settings/ButtonSettings.js","components/Settings/PageSettings.js","pages/Setting.js","components/Notification.js","components/AuthProvider.js","config.js","App.js","serviceWorker.js","index.js"],"names":["NOTIFICATION_TYPES","initialNotificationState","showNotification","header","message","color","notification","state","action","type","payload","USER_TYPES","initialUserState","isLogged","user","id","name","email","authToken","SETTINGS_TYPE","initialSettingsState","config","appId","appLogo","favicon","colors","appBackgroundColor","backgroundColor","navBarOptions","activeColor","inactiveColor","panelBackgroundColor","buttonColor","textColor","primaryText","secondaryText","settings","mainReducer","notificationState","userState","settingsState","AppContext","createContext","AppContextProvider","props","initialState","useReducer","value","dispatch","Provider","children","selectNotificationState","Consumer","selectSettingsState","createLoginSuccessAction","createLoginErrorAction","createLogoutAction","BASE_API","process","CATEGORY_API","NECESSITY_API","NECESITY_TYPE_API","createHeaders","headers","Headers","set","fetchAPI","a","url","method","body","onSuccess","onError","parse","x","request","JSON","stringify","fetch","response","json","parsed","ok","api","login","logout","createCatetory","category","getCategories","getNecessities","getNecessitiesByCategory","getNecessityTypes","createNecessityType","necessityType","createNecessity","necessity","removeNecessityType","updateNecessityType","removeCategory","updateCategory","getNecessityType","getNecessity","getNecessitiesByType","createShowSuccessNotificationAction","createShowErrorNotificationAction","closeNotificationAction","LoginCard","history","useHistory","useContext","useState","username","setUsername","password","setPassword","styles","login__form","marginBottom","form__container","height","marginTop","button__login","onClickLogin","userData","token","push","error","handlerInput","event","handlerFunction","target","style","className","required","placeholder","aria-label","aria-describedby","onInput","e","onClick","Login","src","alt","width","margin","selectUserState","selectUserAuthToken","storage","window","localStorage","Navbar","getItem","image__logo","fill","marginLeft","filter","navbar","button__sidebar","data-toggle","href","role","aria-expanded","aria-controls","openSideBarButton","user__icon","fontSize","marginRight","verticalAlign","user__name","aria-hidden","userInformation","SideBarMenu","sidebar__menu","to","BaseHome","necessityTypeHoverState","setNecessityTypeHoverState","categoryButtonHoverState","setCategoryButtonHoverState","necessityHoverState","setNecessityHoverButton","buttonsStates","necessityTypeButton","setNecessityTypeButton","categoryButton","setCategoryButton","necessityButton","setNecessityButton","styleSettingButton","setStyleSettingButton","body__title_background","home_body","action__card","textAlign","justifyContent","border","borderRadius","transition","action__card_hover","opacity","cursor","image__card","getCardStyleClass","card","onMouseEnter","onMouseLeave","renderOptions","CategoryService","setCategories","getHeaders","categoriesResponse","categoryData","categories","idx","splice","NecessityTypeService","setNecessityTypes","checkingLoginStatus","necessityTypeData","necessityTypes","necessityTypeId","renderMappingCategoriesSection","length","map","button__show_information","cards","renderCategoryCard","renderMappingTypesSection","section__background","renderNecessityTypeCard","PublicHome","loginButtonHover","setLoginButtonHover","fetchCategories","fetchNecessityTypes","useEffect","padding","button__login_hover","renderWelcomeSection","secondaryColorText","align","renderObjectiveSection","disabledFilter","filterState","setFilterFunction","CategoryTable","onDeleteCategory","onEditCategory","table__head","table_item","editModeStates","Array","editMode","setEditMode","categoryEditName","setCategoryEditName","onClickDelete","onClickEdit","indexOf","toString","key","title","CategoryForm","onInputHandler","onClickHandler","button__create","categoryName","setCategoryName","onSubmitHandler","categoryService","Category","onCreateCategory","renderNecessityCategories","button__show_categories","badge","class","data-target","custom__model","tabIndex","aria-labelledby","data-dismiss","renderCategoriesModal","NecessityTypeTable","data","onDeleteNecessityType","onEditNeccesityType","necessityEditName","setNecessityEditName","data-placement","NecessityTypeForm","categoriesData","necesssityTypeName","setNecessityTypeName","hasCategories","setHasCategories","necessityData","handleCategoryInput","checked","includes","onChange","for","necessityTypeService","NecessityType","fn","fetchNecessityTypesAndCheckLoginStatus","onCreateNecessityType","accessToken","uri","mapCenter","MapComponent","dataObject","setDataObject","matrixCoord","setMatrixCoord","generatePopupFunction","onClickMapHandler","Promise","resolve","then","res","center","arr","location","coordinates","reduce","y","calculateCenter","Map","zoom","tap","animate","latlng","originalEvent","coords","Object","values","onFlyMarker","ctrlKey","fstCoords","TileLayer","attribution","tileSize","maxZoom","zoomOffset","Marker","position","Rectangle","bounds","properties","draggable","CircleMarker","radius","Polygon","positions","defaultProps","Popup","description","mappingColors","renderExtraPropertiesForLocationType","locationType","setShapeColor","setCircleRadius","circleSize","circleSpacing","onChangeComplete","hex","NecessityForm","coordFromMap","onSelectNecessityType","onHandlerSummit","necessityTypeValue","setNecessityTypeValue","categoryValue","setCategoryValue","descriptionValue","setDescriptionValue","nameValue","setNameValue","setLocationType","circleRadius","shapeColor","onClickSummitHandler","handlerNecessityTypeInput","necessityTypeName","NecessityTable","showNecessityIntoMap","isData","setIsData","items_color","Filter","onSelectFilter","enable","filter__button","boderColor","dropdown_item","dataSelected","setDataSelected","onCategorySelected","getFilterButtonStyleClass","aria-haspopup","disabled","necessityService","NecessityService","setNecessityList","necessityList","setDataToMap","newNecessity","setData","Necessity","dataToMap","mode","setMode","setCoordinates","necessityTypesIsFetched","setNecessityTypesIsFetched","setTitle","filterEnable","setFilterEnable","publicHomeFilter","setPublicHomeFilter","getNecessityTypesData","getNecessitiesData","fetchNecessitiesByCategory","showNecessitiesByCategory","fetchFilteredData","onCategoryFilterOption","onNecessityTypeFilterOption","match","params","onSaveNecessity","saveNecessity","nav__pill","active","getPillStyleClass","pill","aria-selected","renderMiniNavbar","find","necess","fetchCategoriesByNecessityType","createChangeSettingsStylesAction","NavbarSettings","pickerButtonClass","onColorValuePicked","pickedColor1","setPickedColor1","pickedColor2","setPickedColor2","pickedColor3","setPickedColor3","showPicker1","setShowPicker1","showPicker2","setShowPicker2","showPicker3","setShowPicker3","objectData","onPickedChange","setColorFunction","onPickedChangeComplete","element","option","ButtonSettings","PageSettings","pickedColor4","setPickedColor4","showPicker4","setShowPicker4","input","inputKeys","split","Setting","storageSettings","localSettings","setLocalSettings","picker__button","onColorPicked","component","componentKeys","setItem","Notification","setTimeout","types","getNotificationType","AuthProvider","Component","customizationObj","navActiveColor","navBackgroundColor","navInactiveColor","link","document","querySelector","createElement","getElementsByTagName","textContent","rel","appendChild","setFaviconAndTitle","App","configFile","body_app","path","exact","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5cf88d97.chunk.js","sourcesContent":["export const NOTIFICATION_TYPES = {\n  SHOW_SUCCESS_NOTIFICATION_ACTION: 'SHOW_SUCCESS_NOTIFICATION_ACTION',\n  SHOW_ERROR_NOTIFICATION_ACTION: 'SHOW_ERROR_NOTIFICATION_ACTION',\n  CLOSE_NOTIFICATION_ACTION: 'CLOSE_NOTIFICATION_ACTION'\n}\n\nconst initialNotificationState = {\n  showNotification: false,\n  header: 'Titulo',\n  message: 'estes es un mensaje para una notificatión',\n  color: 'success'\n}\n\nexport const getInitialNotificationState = () => initialNotificationState\n\nexport const notification = (state = initialNotificationState, action) => {\n  switch (action.type) {\n    case NOTIFICATION_TYPES.SHOW_SUCCESS_NOTIFICATION_ACTION: {\n      return {\n        showNotification: true,\n        header: action.payload.header,\n        message: action.payload.message,\n        color: 'success'\n      }\n    }\n    case NOTIFICATION_TYPES.SHOW_ERROR_NOTIFICATION_ACTION: {\n      return {\n        showNotification: true,\n        header: action.payload.header,\n        message: action.payload.message,\n        color: 'danger'\n      }\n    }\n    case NOTIFICATION_TYPES.CLOSE_NOTIFICATION_ACTION: {\n      return {\n        showNotification: false\n      }\n    }\n    default:\n      return state\n\n  }\n}\n","export const USER_TYPES = {\n    LOGIN_USER_SUCCESS_ACTION : \"LOGIN_USER_SUCCESS_ACTION\",\n    LOGIN_USER_ERROR_ACTION : \"LOGIN_USER_ERROR_ACTION\",\n    LOGOUT_USER_ACTION : \"LOGOUT_USER_ACTION\"\n}\n\nconst initialUserState = {\n    isLogged: false,\n    user: {\n        id: null,\n        name: \"\",\n        email: \"\",\n        authToken: null\n    }\n}\n\nexport const getInitialUserState = () => initialUserState\n\nexport const user = (state = initialUserState, action) => {\n    switch(action.type) {\n        case USER_TYPES.LOGIN_USER_SUCCESS_ACTION: {\n          return { isLogged: true, user: action.payload }\n        }\n        case USER_TYPES.LOGIN_USER_ERROR_ACTION: {\n          return { user: { id: null, name: \"\", email: \"\", authToken: null }, isLogged: false }\n        }\n        case USER_TYPES.LOGOUT_USER_ACTION: {\n          return { user: { id: null, name: \"\", email: \"\", authToken: null }, isLogged: false }\n        }\n        default:\n            return state\n    }\n};\n","export const SETTINGS_TYPE = {\n  CHANGE_SETTINGS_STYLES: 'CHANGE_SETTINGS_STYLES'\n}\n\nconst initialSettingsState = {\n  config: {\n    appId: null,\n    appLogo: null,\n    favicon: null,\n    colors: {\n      appBackgroundColor: {\n        backgroundColor: null\n      },\n      navBarOptions: {\n        activeColor: null,\n        backgroundColor: null,\n        inactiveColor: null\n      },\n      panelBackgroundColor: {\n        backgroundColor: null\n      },\n      buttonColor: {\n        backgroundColor: null,\n        textColor: null\n      },\n      primaryText: {\n        color: null\n      },\n      secondaryText: {\n        color: null\n      }\n    },\n    name: null,\n  }\n}\n\nexport const getInitialSettingsState = () => initialSettingsState\n\nexport const settings = (state = initialSettingsState, action) => {\n  switch (action.type) {\n    case SETTINGS_TYPE.CHANGE_SETTINGS_STYLES: {\n      return {\n        config: action.payload\n      }\n    }\n    default:\n      return state\n\n  }\n}\n","import { getInitialNotificationState, notification } from \"./reducers/notification\"\nimport { getInitialUserState, user } from \"./reducers/user\"\nimport { getInitialSettingsState, settings } from \"./reducers/settings\"\n\nexport const getInitialState = () => ({\n  notificationState: getInitialNotificationState(),\n  userState: getInitialUserState(),\n  settingsState: getInitialSettingsState()\n});\n\nexport const mainReducer = (state, action) => {\n  return {\n    notificationState: notification(state.notificationState, action),\n    userState: user(state.userState, action),\n    settingsState: settings(state.settingsState, action)\n  }\n};\n","import React, { createContext, useReducer, useContext } from \"react\"\nimport {getInitialState, mainReducer} from \"./reducer\";\n\nconst AppContext = createContext();\n\nconst useAppContext = () => useContext(AppContext);\n\nconst AppContextProvider = props => {\n  const initialState = getInitialState();\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\n  );\n};\n\nlet AppContextConsumer = AppContext.Consumer;\n\nexport {\n  AppContext,\n  useAppContext,\n  AppContextProvider,\n  AppContextConsumer\n};\n","export const selectNotificationState = state => state.notificationState\n","export const selectSettingsState = state => state.settingsState\n","import {\n  USER_TYPES\n} from '../reducers/user'\n\nexport const createLoginSuccessAction = user => ({\n  type: USER_TYPES.LOGIN_USER_SUCCESS_ACTION,\n  payload: user\n})\n\nexport const createLoginErrorAction = user => ({\n  type: USER_TYPES.LOGIN_USER_ERROR_ACTION,\n  payload: user\n})\n\nexport const createLogoutAction = () => ({\n  type: USER_TYPES.LOGOUT_USER_ACTION\n})\n\nexport const UserAction = {\n  createLogoutAction,\n  createLoginErrorAction,\n  createLoginSuccessAction\n}\n","import { createLogoutAction } from '../store/actions/user.js'\n\nconst BASE_API = process.env.REACT_APP_API_BASE;\nconst LOGIN_API = BASE_API + '/auth'\nconst CATEGORY_API = BASE_API + '/categories'\nconst NECESSITY_API = BASE_API + '/necessities'\nconst NECESITY_TYPE_API = BASE_API + '/necessity-types'\n\nconst createHeaders = () => {\n  const headers = new Headers();\n  headers.set('Content-Type', 'application/json')\n\n  return headers\n}\n\nexport const fetchAPI = async ({\n  url,\n  method,\n  body,\n  onSuccess,\n  headers,\n  onError,\n  parse = x => x\n}) => {\n  try {\n    const request = {\n      method,\n      headers: headers ? headers : createHeaders(),\n      body: JSON.stringify(body)\n    };\n    const response = await fetch(url, request);\n    const json = await response.json();\n    const parsed = parse(json);\n\n    const { ok } = response\n\n    if (ok && onSuccess) {\n      onSuccess(parsed);\n    }\n\n    if (!ok && onError) {\n      onError(parsed)\n    }\n\n    return parsed;\n\n  } catch (error) {\n    if (onError) {\n      onError(error);\n    }\n    return error;\n  }\n}\n\n\nexport const logout = () => createLogoutAction()\n\nexport const login = (user, onSuccess, onError) => fetchAPI({\n  url: LOGIN_API,\n  method: 'POST',\n  body: user,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const getCategories = (headers, onSuccess, onError) => fetchAPI({\n  url: CATEGORY_API,\n  method: 'GET',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const getNecessities = (headers, onSuccess, onError) => fetchAPI({\n  url: NECESSITY_API,\n  method: 'GET',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const getNecessitiesByCategory = (category, headers, onSuccess, onError) => fetchAPI({\n  url: NECESSITY_API + `/${category}`,\n  method: 'GET',\n  onSuccess: onSuccess,\n  headers: headers,\n  onError: onError\n})\n\nexport const getNecessityTypes = (headers,onSuccess, onError) => fetchAPI({\n  url: NECESITY_TYPE_API,\n  method: 'GET',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const createCatetory = (category, headers, onSuccess, onError) => fetchAPI({\n  url: CATEGORY_API,\n  method: 'POST',\n  headers: headers,\n  body: category,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const createNecessityType = (necessityType, headers, onSuccess, onError) => fetchAPI({\n  url: NECESITY_TYPE_API,\n  method: 'POST',\n  headers: headers,\n  body: necessityType,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const createNecessity = (necessity, headers, onSuccess, onError) => fetchAPI({\n  url: NECESSITY_API,\n  method: 'POST',\n  headers: headers,\n  body: necessity,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const removeNecessityType = (id, headers, onSuccess, onError) => fetchAPI({\n  url: `${NECESITY_TYPE_API}/${id}`,\n  method: 'DELETE',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const updateNecessityType = (id, necessityType, headers, onSuccess, onError) => fetchAPI({\n  url: `${NECESITY_TYPE_API}/${id}`,\n  method: 'PUT',\n  headers: headers,\n  body: necessityType,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const removeCategory = (id, headers, onSuccess, onError) => fetchAPI({\n  url: `${CATEGORY_API}/${id}`,\n  method: 'DELETE',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const updateCategory = (id, category, headers, onSuccess, onError) => fetchAPI({\n  url: `${CATEGORY_API}/${id}`,\n  method: 'PUT',\n  headers: headers,\n  body: category,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const getNecessityType = (id, headers, onSuccess, onError) => fetchAPI({\n  url: `${NECESITY_TYPE_API}/${id}`,\n  method: 'GET',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const getNecessity = (id, headers, onSuccess, onError) => fetchAPI({\n  url: `${NECESSITY_API}/${id}`,\n  method: 'GET',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n\nexport const getNecessitiesByType = (necessityType, headers, onSuccess, onError) => fetchAPI({\n  url: `${NECESSITY_API}/type/${necessityType}`,\n  method: 'GET',\n  headers: headers,\n  onSuccess: onSuccess,\n  onError: onError\n})\n","import {\n  fetchAPI,\n  getNecessities,\n  getNecessitiesByCategory,\n  login,\n  logout,\n  createCatetory,\n  getCategories,\n  getNecessityTypes,\n  createNecessityType,\n  createNecessity,\n  removeNecessityType,\n  updateNecessityType,\n  removeCategory,\n  updateCategory,\n  getNecessityType,\n  getNecessity,\n  getNecessitiesByType\n} from './api.js';\n\nconst api = {\n  fetchAPI,\n  login,\n  logout,\n  createCatetory,\n  getCategories,\n  getNecessities,\n  getNecessitiesByCategory,\n  getNecessityTypes,\n  createNecessityType,\n  createNecessity,\n  removeNecessityType,\n  updateNecessityType,\n  removeCategory,\n  updateCategory,\n  getNecessityType,\n  getNecessity,\n  getNecessitiesByType\n}\n\nexport default api\n","import {  NOTIFICATION_TYPES } from '../reducers/notification'\n\nexport const createShowSuccessNotificationAction = notification => ({\n  type: NOTIFICATION_TYPES.SHOW_SUCCESS_NOTIFICATION_ACTION,\n  payload: notification\n})\n\nexport const createShowErrorNotificationAction = notification => ({\n  type: NOTIFICATION_TYPES.SHOW_ERROR_NOTIFICATION_ACTION,\n  payload: notification\n})\n\nexport const closeNotificationAction = notification => ({\n  type: NOTIFICATION_TYPES.CLOSE_NOTIFICATION_ACTION,\n  payload: notification\n})\n\nexport const NotificationAction = {\n  createShowErrorNotificationAction,\n  createShowSuccessNotificationAction,\n  closeNotificationAction\n}\n","import React, { useState, useContext } from 'react'\nimport api from '../api/'\nimport { useHistory } from 'react-router-dom'\nimport { AppContext } from '../store/Store.js'\nimport { createLoginSuccessAction, createLoginErrorAction } from '../store/actions/user.js'\nimport { createShowErrorNotificationAction } from '../store/actions/notification.js'\nimport { selectSettingsState } from '../store/selectors/settings.js'\n\n\nconst LoginCard = ({ config }) => {\n  const history = useHistory()\n  const { dispatch } = useContext(AppContext)\n  const { colors } = config\n\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const styles = {\n    login__form: {\n      marginBottom: 40\n    },\n    form__container: {\n      height: '100%',\n      marginTop: 50\n    },\n    button__login: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor\n    }\n  }\n\n  const onClickLogin = async () => {\n    const userData = {\n      email: username,\n      password: password\n    }\n\n    const onSuccess = response => {\n      dispatch(createLoginSuccessAction({\n         id: 1,\n         name: userData.email,\n         email: userData.email,\n         authToken: response.token\n       }))\n      history.push('/home')\n    }\n\n    const onError = (error) => {\n      dispatch(createLoginErrorAction())\n      dispatch(createShowErrorNotificationAction({\n        header: '¡Error de Autenticación!',\n        message: 'El Usuario o la Contraseña son incorrectas'\n      }))\n    }\n\n    await api.login(userData, onSuccess, onError)\n  }\n\n  const handlerInput = (event, handlerFunction) => {\n    const { value } = event.target\n    handlerFunction(value)\n  }\n\n  return (\n    <div style={styles.form__container}>\n        <div style={styles.login__form}>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">\n                <i className=\"fa fa-user\" />\n              </span>\n            </div>\n            <input type=\"text\"\n              required\n              name=\"username\"\n              className=\"form-control\"\n              placeholder=\"Usuario\"\n              aria-label=\"Username\"\n              aria-describedby=\"basic-addon1\"\n              onInput={e => handlerInput(e, setUsername)}\n            />\n          </div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">\n                <i className=\"fa fa-lock\" />\n              </span>\n            </div>\n            <input type=\"password\"\n              required\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Contraseña\"\n              aria-label=\"Password\"\n              aria-describedby=\"basic-addon1\"\n              onInput={e => handlerInput(e, setPassword)}\n            />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-block\" style={styles.button__login} onClick={onClickLogin}>Iniciar Sesión</button>\n    </div>\n  )\n}\n\n\n\nconst Login = () => {\n  const { state } = useContext(AppContext)\n  const { config } = selectSettingsState(state)\n  const { appLogo } = config\n\n  const styles = {\n    image: {\n      width: '30vw',\n      height: '30vh',\n      margin: '0 auto'\n    },\n    login__form__container: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxWidth: '30vw',\n      width: '30vm',\n      height: '100%',\n      maxHeight: '100vh',\n      margin: '0 auto',\n      paddingTop: 50,\n    }\n  }\n\n  return (\n    <div className=\"container col-md-4\" >\n      <img\n        src={appLogo}\n        alt=\"mapping-platform-logo\"\n        style={styles.image}\n      />\n      <LoginCard config={config}/>\n    </div>\n  )\n}\n\nexport default Login\n","export const selectUserState = state => state.userState\n\nexport const selectUserIsLogged = state => selectUserState(state).isLogged\n\nexport const selectUserAuthToken = state => selectUserState(state).user.authToken\n","import React, { useContext } from 'react'\nimport { AppContext } from '../store/Store.js'\nimport { useHistory } from 'react-router-dom'\nimport { selectUserState } from '../store/selectors/user.js'\n\nconst storage = window.localStorage\n\nconst userInformation = (user, isLogged, history, colors) => {\n  const styles = {\n    user__icon: {\n      fontSize: 26,\n      color: colors.secondaryText.color,\n      marginRight: 10,\n      verticalAlign: 'middle'\n    },\n    user__name: {\n      fontSize: 12,\n      color: colors.secondaryText.color,\n      margin: '0 auto',\n      verticalAlign: 'middle'\n    },\n    button__login: {\n      backgroundColor: colors.buttonColor.textColor,\n      color: colors.buttonColor.backgroundColor,\n    }\n  }\n\n  const goToLoginPage = () => {\n    history.push('/login')\n  }\n\n  return (\n    <div className=\"col col-md-12 col-sm-4 ds-flex flex-row\">\n      { isLogged ?\n        <div>\n          <i className=\"fa fa-user-circle\" style={styles.user__icon} aria-hidden=\"true\" />\n          <span style={styles.user__name}>{user.name}</span>\n        </div> :\n          <button className=\"btn\" style={styles.button__login} onClick={goToLoginPage}>Ingresar</button>\n      }\n    </div>\n  )\n}\n\nconst openSideBarButton = (colors) => {\n  const styles = {\n    button__sidebar: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor\n    }\n  }\n\n  return (\n    <a className=\"btn btn-sm\" style={styles.button__sidebar}\n      data-toggle=\"collapse\" href=\"#sidebarMenu\"\n      role=\"button\" aria-expanded=\"false\"\n      aria-controls=\"collapseExample\"\n    ><i className=\"fa fa-bars\"/></a>\n  )\n}\n\n\nconst Navbar = () => {\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n  const { colors, appLogo } = config\n\n  const styles = {\n    image__logo: {\n      width: '6vm',\n      height: '40px',\n      fill: colors.buttonColor.textColor,\n      marginLeft: 10,\n      filter: 'invert(1)'\n    },\n    navbar: {\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      color: colors.buttonColor.textColor\n    }\n  }\n\n  const { state } = useContext(AppContext)\n  const { user, isLogged } = selectUserState(state)\n  const history = useHistory()\n\n  return (\n    <nav className=\"navbar mb-0\" style={styles.navbar}>\n    <div className=\"ds-flex flex-row\">\n      { isLogged ? openSideBarButton(colors) : null}\n        <img src={appLogo} alt=\"mapping-platform-logo\" style={styles.image__logo}/>\n      </div>\n      <div>\n        {userInformation(user, isLogged, history, colors)}\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React, { useContext} from 'react'\nimport { AppContext } from '../store/Store.js'\nimport { Link } from \"react-router-dom\";\nimport { selectSettingsState } from '../store/selectors/settings.js'\n\n\nconst SideBarMenu = () => {\n  const { state } = useContext(AppContext)\n  const { config } = selectSettingsState(state)\n  const { colors } = config\n\n  const styles = {\n    sidebar__menu: {\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      color: colors.buttonColor.textColor\n    }\n  }\n\n  return (\n    <nav className=\"collapse sidenav\" id=\"sidebarMenu\" style={styles.sidebar__menu}>\n      <div className=\"list-unstyled\">\n        <Link to=\"/home\"><span className=\"side__menu__text\">Dashboard</span></Link>\n        <Link to=\"/\"><span className=\"side__menu__text\">Home</span></Link>\n        <Link to=\"/necessity-types\"><span className=\"side__menu__text\">Tipos de Necesidades</span></Link>\n        <Link to=\"/necessities\"><span className=\"side__menu__text\">Mapeos de Necesidades</span></Link>\n        <Link to=\"/categories\"><span className=\"side__menu__text\">Categorías</span></Link>\n        <Link to=\"/login\"><span className=\"side__menu__text\">Salir</span></Link>\n      </div>\n    </nav>\n  )\n}\n\nexport default SideBarMenu\n","import React, { useState, useContext } from 'react'\nimport Navbar from '../components/Navbar.js'\nimport SideBarMenu from '../components/SideBarMenu.js'\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from '../store/Store.js'\nimport { selectSettingsState } from '../store/selectors/settings.js'\n\nconst renderOptions = (buttonsStates, colors) => {\n  const styles = {\n    action__card: {\n      backgroundColor: 'transparent',\n      color: colors.primaryText.color,\n      width: '20em',\n      height: '12em',\n      textAlign: 'center',\n      justifyContent: 'center',\n      border: `1px dashed ${colors.buttonColor.backgroundColor}`,\n      borderRadius: '.70em',\n      transition: '.25s',\n    },\n    action__card_hover: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor,\n      opacity: 0.7,\n      cursor: 'pointer',\n      width: '20em',\n      height: '12em',\n      transition: '.25s',\n      textAlign: 'center',\n      justifyContent: 'center',\n      border: `1px dashed ${colors.buttonColor.textColor}`,\n      borderRadius: '.70em',\n    },\n    image__card: {\n      width: 150,\n      opacity: 0.4,\n      filter: 'grayscale(1)'\n    },\n    home_body: {\n      backgroundColor: colors.appBackgroundColor.backgroundColor\n    }\n  }\n\n  const getCardStyleClass = (card) => {\n    switch (card) {\n      case 'necessity-type':\n        return buttonsStates.necessityTypeButton ? styles.action__card_hover : styles.action__card\n      case 'category':\n        return buttonsStates.categoryButton ? styles.action__card_hover : styles.action__card\n      case 'necessity':\n        return buttonsStates.necessityButton ? styles.action__card_hover : styles.action__card\n      case 'style-setting':\n        return buttonsStates.styleSettingButton ? styles.action__card_hover : styles.action__card\n      default:\n    }\n  }\n\n  return (\n      <div className=\"row col-md-12 home__body\" style={styles.home_body}>\n        <Link to=\"/necessity-types\"\n          className=\"card card__router\"\n          style={getCardStyleClass('necessity-type')}\n          onMouseEnter={() => buttonsStates.setNecessityTypeButton(true)}\n          onMouseLeave={() => buttonsStates.setNecessityTypeButton(false)}\n        >\n          <div className=\"col\">\n            <img src=\"/necessities.svg\" alt=\"\" style={styles.image__card} className=\"image__card\"/>\n            <div>\n              <h4>Tipos de Necesidades</h4>\n            </div>\n          </div>\n        </Link>\n\n        <Link to=\"/categories\"\n          className=\"card card__router\"\n          style={getCardStyleClass('category')}\n          onMouseEnter={() => buttonsStates.setCategoryButton(true)}\n          onMouseLeave={() => buttonsStates.setCategoryButton(false)}\n        >\n          <div className=\"col mt-2\">\n            <img src=\"/categories.svg\" alt=\"\" style={styles.image__card} className=\"image__card\"/>\n            <div className=\"mt-2\">\n              <h4>Categorías</h4>\n            </div>\n          </div>\n        </Link>\n\n        <Link to=\"/necessities\"\n          className=\"card card__router\"\n          style={getCardStyleClass('necessity')}\n          onMouseEnter={() => buttonsStates.setNecessityButton(true)}\n          onMouseLeave={() => buttonsStates.setNecessityButton(false)}\n        >\n          <div className=\"col mt-2\">\n            <img src=\"/necessities.svg\" alt=\"\" style={styles.image__card} className=\"image__card\"/>\n            <div className=\"mt-2\">\n              <h4>Necesidades</h4>\n            </div>\n          </div>\n        </Link>\n\n        <Link to=\"/settings\"\n          className=\"card card__router\"\n          style={getCardStyleClass('style-setting')}\n          onMouseEnter={() => buttonsStates.setStyleSettingButton(true)}\n          onMouseLeave={() => buttonsStates.setStyleSettingButton(false)}\n        >\n          <div className=\"col pt-1\">\n            <img src=\"/chromatic-wheel.svg\" alt=\"\" style={styles.image__card} className=\"image__card\"/>\n            <div>\n              <h4>Personalización</h4>\n            </div>\n          </div>\n        </Link>\n      </div>\n  )\n}\n\nconst BaseHome = () => {\n  const { state } = useContext(AppContext)\n  const { config } = selectSettingsState(state)\n  const { colors } = config\n\n  const [necessityTypeHoverState, setNecessityTypeHoverState] = useState(false)\n  const [categoryButtonHoverState, setCategoryButtonHoverState] = useState(false)\n  const [necessityHoverState, setNecessityHoverButton] = useState(false)\n  const [styleSettingHoverState, setStyleSettingHoverState] = useState(false)\n  const buttonsStates = {\n    necessityTypeButton: necessityTypeHoverState,\n    setNecessityTypeButton: setNecessityTypeHoverState,\n    categoryButton: categoryButtonHoverState,\n    setCategoryButton: setCategoryButtonHoverState,\n    necessityButton: necessityHoverState,\n    setNecessityButton: setNecessityHoverButton,\n    styleSettingButton: styleSettingHoverState,\n    setStyleSettingButton: setStyleSettingHoverState\n  }\n\n  const styles = {\n    body__title_background: {\n      color: colors.buttonColor.textColor,\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      filter: 'opacity(85%)'\n    },\n    home_body: {\n      backgroundColor: colors.appBackgroundColor.backgroundColor\n    }\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <SideBarMenu />\n      <div className=\"body__title\" style={styles.body__title_background}>\n        <h2>Panel de Administración</h2>\n      </div>\n      <div className=\"container-fluid base__home_body\" style={styles.home_body}>\n          <div className=\"col col-md-12\" style={styles.home_body}>\n            {renderOptions(buttonsStates, colors)}\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BaseHome\n","import { selectUserAuthToken } from '../../store/selectors/user.js'\nimport api from '../../api'\nimport {\n    createShowSuccessNotificationAction,\n    createShowErrorNotificationAction\n} from '../../store/actions/notification.js'\n\nclass CategoryService {\n\n    static getHeaders (state) {\n        return {\n            'Auth': selectUserAuthToken(state),\n            'Content-Type': 'application/json'\n        }\n    }\n    \n    async fetchCategories (setCategories, state, history) {\n        \n        const headers = CategoryService.getHeaders(state)\n        const categoriesResponse = await api.getCategories(headers)\n        categoriesResponse && !categoriesResponse.error ? setCategories(categoriesResponse) : history.push('/login')\n    }\n\n    async getCategories (setCategories, state) {\n        const onSuccess = response => {\n          setCategories(response)\n        }\n    \n        const headers = {\n          'Auth': selectUserAuthToken(state)\n        }\n    \n        await api.getCategories(headers, onSuccess)\n    }\n\n    async onCreateCategory (categoryData, dispatch, categories, setCategories, state) {\n        \n        const headers = CategoryService.getHeaders(state)\n\n        const onSuccess = response => {\n          dispatch(createShowSuccessNotificationAction({\n            header: '¡Categoría Creada!',\n            message: 'La categoría se creó con éxito'\n          }))\n          categories.push(response)\n          setCategories(categories)\n        }\n    \n        const onError = error => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n    \n        await api.createCatetory(categoryData, headers, onSuccess, onError)\n    }\n\n    async onDeleteCategory (idx, categoryData, categories, dispatch, state) {\n\n        const headers = CategoryService.getHeaders(state)\n\n        const onSuccess = response => {\n          dispatch(createShowSuccessNotificationAction({\n            header: '¡Categoría Eliminada!',\n            message: 'La categoría se elimino con éxito'\n          }))\n        }\n    \n        const onError = error => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n    \n        await api.removeCategory(categoryData.id, headers, onSuccess, onError)\n        categories.splice(idx, 1)\n    }\n\n    async onEditCategory (category, dispatch, state) {\n\n        const headers = CategoryService.getHeaders(state)\n\n        const onSuccess = response => {\n          dispatch(createShowSuccessNotificationAction({\n            header: '¡Categoría Modificada!',\n            message: 'La categoría se modificó con éxito'\n          }))\n        }\n    \n        const onError = error => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n    \n        await api.updateCategory(category.id, category, headers, onSuccess, onError)\n    }\n}\n\nexport default CategoryService","import { selectUserAuthToken } from '../../store/selectors/user.js'\nimport api from '../../api'\nimport {\n    createShowSuccessNotificationAction,\n    createShowErrorNotificationAction\n} from '../../store/actions/notification.js'\n\nclass NecessityTypeService {\n\n    static getHeaders (state) {\n        return {\n            'auth': selectUserAuthToken(state),\n            'Content-Type': 'application/json'\n        }\n    }\n\n    async getNecessityTypes (state, setNecessityTypes) {\n      const headers = NecessityTypeService.getHeaders(state)\n  \n      const onSuccess = response => {\n        setNecessityTypes(response)\n      }\n  \n      await api.getNecessityTypes(headers, onSuccess)\n    }\n    \n    async fetchNecessityTypesAndCheckLoginStatus (checkingLoginStatus, setNecessityTypes, state) {\n        const headers = NecessityTypeService.getHeaders(state)\n\n        const response = await api.getNecessityTypes(headers)\n        checkingLoginStatus(response, setNecessityTypes)\n      }\n    \n    async fetchCategories(checkingLoginStatus, setCategories, state) {\n        const headers = NecessityTypeService.getHeaders(state)\n        const response = await api.getCategories(headers)\n        checkingLoginStatus(response, setCategories)\n    }\n\n    async onCreateNecessityType (necessityTypeData, necessityTypes, setNecessityTypes, dispatch, state) {\n        const headers = NecessityTypeService.getHeaders(state)\n\n        const onSuccess = response => {\n          dispatch(createShowSuccessNotificationAction({\n            header: '!Tipo de Necesidad Creada!',\n            message: 'El tipo de necesidad se creó con éxito'\n          }))\n          necessityTypes.push(response)\n          setNecessityTypes(necessityTypes)\n        }\n    \n        const onError = error => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n    \n        await api.createNecessityType(necessityTypeData, headers, onSuccess, onError)\n    }\n    \n    \n    async onDeleteNecessityType (idx, necessityTypeId, necessityTypes, dispatch, state) {\n        const headers = NecessityTypeService.getHeaders(state)\n\n        const onSuccess = response => {\n          dispatch(createShowSuccessNotificationAction({\n            header: '!Tipo de Necesidad Eliminada!',\n            message: 'El tipo de necesidad se eliminó con éxito'\n          }))\n        }\n    \n        const onError = error => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n    \n        await api.removeNecessityType(necessityTypeId, headers, onSuccess, onError)\n        necessityTypes.splice(idx, 1)\n    }\n    \n    \n    async onEditNeccesityType (necessityType, dispatch, state) {\n        const headers = NecessityTypeService.getHeaders(state)\n\n        const onSuccess = response => {\n          dispatch(createShowSuccessNotificationAction({\n            header: '¡Tipo de Necesidad Modificada!',\n            message: 'El tipo de necesidad se modificó con éxito'\n          }))\n        }\n    \n        const onError = error => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n    \n        await api.updateNecessityType(necessityType.id, necessityType, headers, onSuccess, onError)\n    }\n}\n\nexport default NecessityTypeService","import React, { useState, useEffect, useContext } from 'react'\nimport { AppContext } from '../store/Store.js'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\nimport CategoryService from '../services/Category/CategoryService.js';\nimport NecessityTypeService from '../services/NecessityType/NecessityTypeService.js';\n\nconst storage = window.localStorage\n\nconst renderCategoryCard = (category, config) => {\n  const { colors } = config\n\n  const styles = {\n    button__show_information: {\n      backgroundColor: 'transparent',\n      color: colors.primaryText.color,\n      transition: '0.17s'\n    },\n    cards: {\n      backgroundColor: colors.appBackgroundColor.backgroundColor,\n      width: '18rem',\n      color: colors.primaryText.color\n    }\n  }\n\n  return (\n    <div className=\"card public__card mt-5\" style={styles.cards}>\n      <div className=\"card-body\" style={styles.cards}>\n        <h4 className=\"card-title public__card_title\">{category.name}</h4>\n        <Link to={`/necessities/${category.name}`} >\n          <button className=\"btn btn-md public__button\"\n            style={styles.button__show_information}\n          >Ver Mapeo</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\n\nconst renderNecessityTypeCard = (type, config) => {\n  const { colors } = config\n\n  const styles = {\n    button__show_information: {\n      backgroundColor: 'transparent',\n      color: colors.buttonColor.textColor,\n      transition: '0.17s'\n    }\n  }\n\n  return (\n    <div className=\"card public__card_secondary mt-5\" style={{width: '18rem'}}>\n      <div className=\"card-body\">\n        <h4 className=\"card-title public__card_title\">{type.name}</h4>\n        <Link to={`/necessities/type/${type.name}`} >\n          <button className=\"btn btn-md public__button\"\n            style={styles.button__show_information}\n          >Ver Mapeo</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\n\n\nconst renderMappingCategoriesSection = (categories, config) => {\n  return (\n    <section id=\"section-3\">\n      <div className=\"container\">\n        <h1>Categorías de Mapeos</h1>\n        <div className=\"col col-md-12\">\n          <div className=\"row\">\n            { categories.length > 0 ?\n                categories.map(category => renderCategoryCard(category, config)) :\n                <h3 className=\"mt-5\">No hay categorías cargadas</h3>\n            }\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\n\nconst renderMappingTypesSection = (necessityTypes, config) => {\n  const { colors } = config\n\n  const styles = {\n    section__background: {\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      color: colors.buttonColor.textColor,\n      filter: 'saturate(0.8)'\n    }\n  }\n\n    return (\n      <section id=\"section-4\" style={styles.section__background}>\n        <div className=\"container\">\n          <h1>Tipos de Mapeos</h1>\n          <div className=\"col col-md-12\">\n            <div className=\"row\">\n              { necessityTypes.length > 0 ?\n                  necessityTypes.map(type => renderNecessityTypeCard(type, config)) :\n                  <h3 className=\"mt-5\">No hay mapeos cargados</h3>\n              }\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n}\n\n\nconst renderObjectiveSection = (config) => {\n  const { colors } = config\n  const styles = {\n    section__background: {\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      color: colors.secondaryText.color\n    },\n    secondaryColorText: {\n      color: colors.secondaryText.color\n    }\n  }\n\n  return (\n    <section id=\"section-2\" style={styles.section__background}>\n      <div className=\"container\">\n        <h1>Objetivo</h1>\n        <h4 className=\"mt-5\" styles={styles.secondaryColorText}>\n          <p align='center' styles={styles.secondaryColorText}>\n            Kintun es una aplicación de mapeo que permite visualizar diferentes necesidades sociales y ambientales.\n            <br />\n            <br />\n            Este proyecto surgió como resultado de relevamientos realizados a organizaciones no gubernamentales. De esta forma, se detectó la posibilidad de unificar distintas plataformas de mapeo con diferentes problemáticas.\n          </p>\n        </h4>\n      </div>\n    </section>\n  )\n}\n\n\nconst renderWelcomeSection = (history, loginButtonHover, setLoginButtonHover, config) => {\n  const { colors, appLogo } = config\n\n  const styles = {\n    button__login: {\n      backgroundColor: 'transparent',\n      color: colors.primaryText.color,\n      border: `.5px solid ${colors.buttonColor.backgroundColor}`,\n      borderRadius: 15,\n      padding: '1em 1em 1em 1em'\n    },\n    button__login_hover: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor,\n      border: `.5px solid ${colors.buttonColor.backgroundColor}`,\n      borderRadius: 15,\n      padding: '1em 1em 1em 1em'\n    },\n    button__show_information: {\n      backgroundColor: 'transparent',\n      color: colors.primaryText.color,\n      transition: '0.3s'\n    }\n  }\n\n  const getButtonClass = () => {\n    return loginButtonHover ? styles.button__login_hover : styles.button__login\n  }\n\n  const goToLoginPage = () => history.push('/login')\n\n  return (\n    <section id=\"section-1\">\n      <div className=\"container-fluid mb-5\">\n        <button\n          className=\"btn pull-right\"\n          style={getButtonClass()}\n          onClick={goToLoginPage}\n          onMouseEnter={() => setLoginButtonHover(true)}\n          onMouseLeave={() => setLoginButtonHover(false)}\n          >Ingresar</button>\n          <img src={appLogo} alt=\"app-logo\" className=\"image__logo\"/>\n      </div>\n      <div className=\"container-fluid col-md-8\">\n        <a className=\"btn btn-lg public__button\" href=\"#section-3\"\n          style={styles.button__show_information}>\n          Categorías\n        </a>\n        <a className=\"btn btn-lg public__button\" href=\"#section-4\"\n          style={styles.button__show_information}>\n          Tipos\n        </a>\n        <a className=\"btn btn-lg public__button\" href=\"/necessities\"\n          style={styles.button__show_information}>\n          Mapa\n        </a>\n      </div>\n    </section>\n  )\n}\n\n\nconst PublicHome = () => {\n  const history = useHistory()\n  const [loginButtonHover, setLoginButtonHover] = useState(false)\n  const [categories, setCategories] = useState([])\n  const [necessityTypes, setNecessityTypes] = useState([])\n\n  const { state } = useContext(AppContext)\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n\n  const fetchCategories = async () => {\n    const categoryService = new CategoryService()\n    categoryService.fetchCategories(setCategories, state, history)\n  }\n\n\n  const fetchNecessityTypes = async () => {\n    const necessityTypeService = new NecessityTypeService()\n    necessityTypeService.getNecessityTypes(state, setNecessityTypes)\n  }\n\n\n  useEffect(() => {\n    if (categories.length < 1) {\n      fetchCategories()\n    }\n    if (necessityTypes.length < 1) {\n      fetchNecessityTypes()\n    }\n  })\n\n  return (\n    <div>\n      { renderWelcomeSection(history, loginButtonHover, setLoginButtonHover, config) }\n      { renderObjectiveSection(config) }\n      { renderMappingCategoriesSection(categories, config) }\n      { renderMappingTypesSection(necessityTypes, config) }\n    </div>\n  )\n}\n\n\nexport default PublicHome\n","export const handlerInput = (event, handlerFunction) => {\n  const { value } = event.target\n  handlerFunction(value)\n}\n\nexport const updateStringValue = (event, field, object) => {\n  const { value } = event.target\n  object[field] = value\n  return object\n}\n\nexport const getPolygonCenter = (arr) => {\n  return arr.reduce((x,y) => {\n      return [x[0] + y[0]/arr.length, x[1] + y[1]/arr.length]\n  }, [0,0])\n}\n\nexport const disabledFilter = (filter, filterState, setFilterFunction, idx) => {\n  if (!filter) {\n    setFilterFunction([true, true])\n  } else {\n    filterState[idx] = false\n    setFilterFunction(filterState)\n  }\n}\n\nexport const checkStylesSettings = (config, history, dispatch, setStylesFunction, objectToReturn) => {\n  const storage = window.localStorage\n  if(!config.__esModule) {\n    history.push('/')\n    const styles = storage.getItem('styles')\n    dispatch(setStylesFunction(styles))\n  } else {\n    const { default: { objectToReturn } } = config\n    return objectToReturn\n  }\n}\n\nexport const changeAppName = name => {\n  let title = document.getElementsByTagName('title')[0]\n  title.textContent = name\n}\n","import React, { useState, useContext } from 'react'\nimport { AppContext } from '../../store/Store.js'\nimport { handlerInput } from '../../utils/utils.js'\nimport { selectSettingsState } from '../../store/selectors/settings.js'\n\n\nconst CategoryTable = ({ categories, onDeleteCategory, onEditCategory}) => {\n  const { state } = useContext(AppContext)\n  const { config } = selectSettingsState(state)\n  const { colors } = config\n\n  const styles = {\n    table__head: {\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      color: colors.buttonColor.textColor,\n      opacity: 0.9,\n    },\n    table_item: {\n      color: colors.primaryText.color\n    }\n  }\n\n  const editModeStates = new Array(categories.length).fill(false)\n\n  const [editMode, setEditMode] = useState(editModeStates)\n  const [categoryEditName, setCategoryEditName] = useState('')\n\n\n  const onClickDelete = async (idx, category) => {\n      await onDeleteCategory(idx, category)\n  }\n\n\n  const onClickEdit = async (idx, category) => {\n    if (!editMode[idx]) {\n      editModeStates[idx] = true\n      setEditMode(editModeStates)\n    } else {\n      editMode[idx] = false\n      if (categoryEditName !== '') {\n        categories[idx]['name'] = categoryEditName\n        await onEditCategory(category)\n      }\n      setEditMode(editModeStates)\n      setCategoryEditName('')\n    }\n  }\n\n\n  return (\n    <table className=\"table table-striped table-md\" >\n      <thead className=\"thead\" style={styles.table__head}>\n        <th style={{width: '65%'}}>Categorías</th>\n        <th style={{width: '10%'}}/>\n        <th style={{width: '10%'}}></th>\n      </thead>\n      <tbody>\n        {\n          categories.map(category => {\n            const idx = categories.indexOf(category).toString()\n            return (\n              <tr id={`category:${category.id}`} key={`category${idx}`}>\n                {\n                  editMode[idx] ?\n                    <input type=\"text\"\n                      value={categoryEditName}\n                      name=\"updateCategoryName\"\n                      className=\"form-control table__input\"\n                      placeholder={category.name}\n                      aria-label=\"Categoría\"\n                      aria-describedby=\"basic-addon1\"\n                      onInput={e => handlerInput(e, setCategoryEditName)}\n                    /> :\n                    <th style={styles.table_item}>{category.name}</th>\n                }\n                <th/>\n                <th className=\"row\">\n                {\n                  !editMode[idx] ?\n                  <i className=\"fa fa-edit edit__icon\" title=\"Editar\" onClick={() => onClickEdit(idx, category)} /> :\n                  <i className=\"fa fa-save edit__icon\" title=\"Finalizar Edición\" onClick={() => onClickEdit(idx, category)} />\n                }\n                <i className=\"fa fa-times times__icon\" title=\"Eliminar\" onClick={() => onClickDelete(idx, category)} />\n                </th>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nexport default CategoryTable\n","import React, { useState } from 'react'\n\nconst storage = window.localStorage\n\nconst CategoryForm = ({ onInputHandler, onClickHandler }) => {\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n  const { colors } = config\n  \n  const styles = {\n    button__create: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor\n    }\n  }\n\n  const [categoryName, setCategoryName] = useState('')\n\n  const clearForm = () => {\n    setCategoryName('')\n  }\n\n  const onSubmitHandler = async () => {\n    const categoryData = {\n      name: categoryName\n    }\n    await onClickHandler(categoryData)\n    clearForm()\n  }\n\n\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Nombre de Categoría</label>\n        <input type=\"text\"\n          required\n          value={categoryName}\n          name=\"categoryName\"\n          className=\"form-control\"\n          placeholder=\"Ingrese un nombre de categoría\"\n          aria-label=\"Categoría\"\n          aria-describedby=\"basic-addon1\"\n          onInput={e => onInputHandler(e, setCategoryName)}\n        />\n      </div>\n      <button type=\"submit\"\n        className=\"btn btn-block btn-dark\"\n        style={styles.button__create}\n        onClick={onSubmitHandler}>Crear Categoría</button>\n    </div>\n  )\n}\n\nexport default CategoryForm\n","import React, { useState, useContext } from 'react'\nimport { AppContext } from '../store/Store.js'\nimport { useHistory } from 'react-router-dom'\nimport Navbar from '../components/Navbar.js'\nimport SideBarMenu from '../components/SideBarMenu.js'\nimport CategoryTable from '../components/Category/CategoryTable.js'\nimport CategoryForm from '../components/Category/CategoryForm.js'\nimport CategoryService from '../services/Category/CategoryService'\nimport { handlerInput } from '../utils/utils.js'\nimport { selectSettingsState } from '../store/selectors/settings.js'\n\nconst categoryService = new CategoryService()\n\n\nconst Category = () => {\n\n  const [categories, setCategories] = useState([])\n\n  const { state, dispatch } = useContext(AppContext)\n  const history = useHistory()\n  const { config } = selectSettingsState(state)\n  const { colors } = config\n\n  const fetchCategories = async () => {\n    await categoryService.fetchCategories(setCategories, state, history)\n  }\n\n\n  useState(() => {\n    fetchCategories()\n  })\n\n\n  const onCreateCategory = async (categoryData) => {\n    await categoryService.onCreateCategory(categoryData, dispatch, categories, setCategories, state)\n  }\n\n\n  const onDeleteCategory = async (idx, categoryData) => {\n    await categoryService.onDeleteCategory(idx, categoryData, categories, dispatch, state)\n  }\n\n\n  const onEditCategory = async (category) => {\n    await categoryService.onEditCategory(category, dispatch, state)\n  }\n\n\n  const styles = {\n    body__title_background: {\n      color: colors.buttonColor.textColor,\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      filter: 'opacity(85%)'\n    },\n    home_body: {\n      backgroundColor: colors.appBackgroundColor.backgroundColor\n    }\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <SideBarMenu />\n      <div className=\"body__title\" style={styles.body__title_background}>\n        <h2>Administración de Categorías</h2>\n      </div>\n      <div className=\"home__body container-fluid\" style={styles.home_body}>\n        <div className=\"row justify-content-between mt-5\">\n          <CategoryForm\n            onInputHandler={handlerInput}\n            onClickHandler={onCreateCategory}\n            colors={colors}\n          />\n          <div className=\"col-md-8 col-sm-12\">\n            <CategoryTable categories={categories}\n              onDeleteCategory={onDeleteCategory}\n              onEditCategory={onEditCategory}\n              colors={colors}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Category\n","import React, { useState } from 'react'\nimport { handlerInput } from '../../utils/utils.js'\n\nconst storage = window.localStorage\n\nconst renderCategoriesModal = (necessity, idx, colors) => {\n  const { categories } = necessity\n  const styles = {\n    custom__model: {\n      backgroundColor: colors.appBackgroundColor.backgroundColor,\n      color: colors.primaryText.color\n    }\n  }\n\n  return (\n    <div className=\"modal fade\" id={`modal-${idx}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\" style={styles.custom__model}>\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Categorías de la Necesidad {necessity.name}</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\" style={{color: colors.primaryText.color}}>&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            {\n              categories && categories.length > 0 ?\n              <ul className=\"list-group\" style={styles.custom__model}>\n                {\n                  categories.map(category => {\n                    return (\n                      <li className=\"list-group-item\" style={styles.custom__model}>{category.name}</li>\n                    )\n                  })\n                }\n                </ul> :\n                <span>Sin Categorías</span>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nconst renderNecessityCategories = (necessity, idx, colors) => {\n  const styles = {\n    button__show_categories: {\n      backgroundColor: 'transparent',\n      border: `1px solid ${colors.buttonColor.backgroundColor}`,\n      color: colors.primaryText.color\n    },\n    badge: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      opacity: 0.7,\n      color: colors.buttonColor.textColor,\n      marginRight: 10\n    }\n  }\n\n  return (\n    <div>\n      <span class=\"badge badge-pill\" style={styles.badge}>{necessity.categories.length}</span>\n      <button type=\"button\" className=\"btn btn-sm\"\n      style={styles.button__show_categories}\n        data-toggle=\"modal\" data-target={`#modal-${idx}`}\n      >\n        <span>Ver </span><i className=\"fa fa-eye\"/>\n      </button>\n      {renderCategoriesModal(necessity, idx, colors)}\n    </div>\n  )\n}\n\n\nconst NecessityTypeTable = ({ data, onDeleteNecessityType, onEditNeccesityType }) => {\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n  const { colors } = config\n\n  const styles = {\n    table__head: {\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      color: colors.buttonColor.textColor,\n      opacity: 0.9,\n    },\n    table_item: {\n      color: colors.primaryText.color\n    }\n  }\n\n  const editModeStates = new Array(data.length).fill(false)\n\n  const [editMode, setEditMode] = useState(editModeStates)\n  const [necessityEditName, setNecessityEditName] = useState('')\n\n\n  const onClickDelete = async (idx, necessityType) => {\n    await onDeleteNecessityType(idx, necessityType.id)\n  }\n\n\n  const onClickEdit = async (idx, necessityType) => {\n    if (!editMode[idx]) {\n      editModeStates[idx] = true\n      setEditMode(editModeStates)\n    } else {\n      editModeStates[idx] = false\n      if (necessityEditName !== '') {\n        data[idx]['name'] = necessityEditName\n        await onEditNeccesityType(necessityType)\n      }\n      setEditMode(editModeStates)\n      setNecessityEditName('')\n    }\n  }\n\n\n  return (\n    <table className=\"table table-striped table-md\" >\n      <thead className=\"thead\" style={styles.table__head}>\n        <th style={{width: '65%'}}>Tipo de Necesidad</th>\n        <th style={{width: '10%'}}>Categorías</th>\n        <th style={{width: '10%'}}></th>\n      </thead>\n      <tbody>\n        {\n          data.map(necessityType => {\n            const idx = data.indexOf(necessityType).toString()\n            return (\n              <tr id={`necessityType:${necessityType.id}`} key={`necessity${idx}`} style={styles.table_item}>\n                {\n                  editMode[idx] ?\n                    <input type=\"text\"\n                      value={necessityEditName}\n                      name=\"updateNecesssityTypeName\"\n                      className=\"form-control table__input\"\n                      placeholder={necessityType.name}\n                      aria-label=\"Necesidad\"\n                      aria-describedby=\"basic-addon1\"\n                      onInput={e => handlerInput(e, setNecessityEditName)}\n                    /> :\n                    <th>{necessityType.name}</th>\n                }\n                <th>{renderNecessityCategories(necessityType, idx, colors)}</th>\n                <th className=\"row\" data-toggle=\"tooltip\" data-placement=\"right\">\n                  {\n                    !editMode[idx] ?\n                      <i className=\"fa fa-edit edit__icon\" title=\"Editar\" onClick={() => onClickEdit(idx, necessityType)}/> :\n                      <i className=\"fa fa-save edit__icon\" title=\"Finalizar Edición\" onClick={() => onClickEdit(idx, necessityType)}/>\n                  }\n                  <i className=\"fa fa-times times__icon\" title=\"Eliminar\" onClick={() => onClickDelete(idx, necessityType)}/>\n                </th>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\n\nexport default NecessityTypeTable\n","import React, { useState, useEffect } from 'react'\n\nconst storage = window.localStorage\n\n\nconst NecessityTypeForm = ({ onInputHandler, onClickHandler, categoriesData }) => {\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n  const { colors } = config\n\n  const styles = {\n    button__create: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor\n    }\n  }\n\n  const [necesssityTypeName, setNecessityTypeName] = useState('')\n  const [categories, setCategories] = useState([])\n  const [hasCategories, setHasCategories] = useState(false)\n\n\n  useEffect(() => {\n    if (categoriesData) {\n      setHasCategories(true)\n    }\n  }, [categoriesData])\n\n  const clearForm = () => {\n    setNecessityTypeName('')\n    setCategories([])\n  }\n\n\n  const onSubmitHandler = async () => {\n    const necessityData = {\n      name: necesssityTypeName,\n      categories: categories\n     }\n    await onClickHandler(necessityData)\n    clearForm()\n  }\n\n  const handleCategoryInput = event => {\n    const { value, checked } = event.target\n\n    if (checked && !categories.includes(value)) {\n      categories.push(value)\n    } else {\n      const idx = categories.indexOf(value)\n      categories.splice(idx, 1)\n    }\n    setCategories(categories)\n  }\n\n\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Nombre</label>\n        <input type=\"text\"\n          required\n          value={necesssityTypeName}\n          name=\"necesssityTypeName\"\n          className=\"form-control\"\n          placeholder=\"Ingrese un nombre para el nuevo tipo de necesidad\"\n          aria-label=\"Necesidad\"\n          aria-describedby=\"basic-addon1\"\n          onInput={e => onInputHandler(e, setNecessityTypeName)}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Categorías</label>\n        <div className=\"row pl-5\">\n        {\n          hasCategories ?\n          categoriesData.map(category => {\n            return (\n              <div className=\"custom-control custom-checkbox checkbox\">\n                <input\n                  className=\"custom-control-input\"\n                  type=\"checkbox\"\n                  id={`${category.id}`}\n                  value={category.name}\n                  onChange={handleCategoryInput}\n                />\n                <label className=\"custom-control-label pull-left\" for={`${category.id}`}>{category.name}</label>\n              </div>\n            )\n          }) :\n          <div className=\"col-md-12\"><h5>Sin Categorías</h5></div>\n        }\n        </div>\n      </div>\n\n      <button type=\"submit\"\n        className=\"btn btn-block btn-dark\"\n        style={styles.button__create}\n        onClick={onSubmitHandler}>Crear Tipo de Necesidad</button>\n    </div>\n  )\n}\n\nexport default NecessityTypeForm\n","import React, { useState, useContext} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AppContext } from '../store/Store.js'\nimport Navbar from '../components/Navbar.js'\nimport SideBarMenu from '../components/SideBarMenu.js'\nimport NecessityTypeTable from '../components/NecessityType/NecessityTypeTable.js'\nimport NecessityTypeForm from '../components/NecessityType/NecessityTypeForm.js'\nimport { handlerInput } from '../utils/utils.js'\nimport NecessityTypeService from '../services/NecessityType/NecessityTypeService'\nimport { selectSettingsState } from '../store/selectors/settings.js'\n\n\nconst necessityTypeService = new NecessityTypeService()\n\n\nconst NecessityType = () => {\n\n  const [necessityTypes, setNecessityTypes] = useState([])\n  const [categories, setCategories] = useState(null)\n\n  const { state, dispatch } = useContext(AppContext)\n  const history = useHistory()\n  const { config } = selectSettingsState(state)\n  const { colors } = config\n\n  const checkingLoginStatus = (response, fn) => {\n    response && !response.error ? fn(response) : history.push('/login')\n  }\n\n\n  const fetchNecessityTypes = async () => {\n    await necessityTypeService.fetchNecessityTypesAndCheckLoginStatus(checkingLoginStatus, setNecessityTypes, state)\n  }\n\n  const fetchCategories = async () => {\n    await necessityTypeService.fetchCategories(checkingLoginStatus, setCategories, state)\n  }\n\n\n  useState(() => {\n    fetchNecessityTypes()\n    fetchCategories()\n  })\n\n\n  const onCreateNecessityType = async (necessityTypeData) => {\n    await necessityTypeService.onCreateNecessityType(necessityTypeData, necessityTypes, setNecessityTypes, dispatch, state)\n  }\n\n\n  const onDeleteNecessityType = async (idx, necessityTypeId) => {\n    await necessityTypeService.onDeleteNecessityType(idx, necessityTypeId, necessityTypes, dispatch, state)\n  }\n\n\n  const onEditNeccesityType = async (necessityType) => {\n    await necessityTypeService.onEditNeccesityType(necessityType, dispatch, state)\n  }\n\n  const styles = {\n    body__title_background: {\n      color: colors.buttonColor.textColor,\n      backgroundColor: colors.navBarOptions.backgroundColor,\n      filter: 'opacity(85%)'\n    },\n    home_body: {\n      backgroundColor: colors.appBackgroundColor.backgroundColor\n    }\n  }\n\n\n  return (\n    <div id=\"router\">\n      <Navbar />\n      <SideBarMenu />\n      <div className=\"body__title\" style={styles.body__title_background}>\n        <h2>Administración de Tipos de Necesidades</h2>\n      </div>\n      <div className=\"home__body container-fluid\" style={styles.home_body}>\n        <div className=\"container-fluid row\">\n          <NecessityTypeForm\n            onClickHandler={onCreateNecessityType}\n            onInputHandler={handlerInput}\n            categoriesData={categories}\n            colors={colors}\n          />\n          <div className=\"col-md-8\">\n            <NecessityTypeTable data={necessityTypes}\n              onDeleteNecessityType={onDeleteNecessityType}\n              onEditNeccesityType={onEditNeccesityType}\n              colors={colors}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NecessityType\n","import React, { useEffect, useState } from 'react';\nimport {\n  Map,\n  TileLayer,\n  Popup,\n  Marker,\n  Rectangle,\n  CircleMarker,\n  Polygon\n} from 'react-leaflet'\nimport { getPolygonCenter } from '../../utils/utils.js'\n\nconst accessToken = process.env.REACT_APP_OSM_API_KEY;\nconst uri = `https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=${accessToken}`;\nconst license = 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>';\nconst mapCenter = [-34.6131516, -58.3772316]\n\n\nconst settingLayerMap = (dataObject) => {\n  return (\n      <TileLayer\n        id={'mapbox/streets-v11'}\n        url={uri}\n        attribution={license}\n        accessToken={accessToken}\n        tileSize={512}\n        maxZoom={18}\n        zoomOffset={-1}\n        checked={true}\n      />\n\n  )\n}\n\nconst generateDefaultPopupFunction = (necessity) => {\n  return (\n    <Popup>\n      <b>{necessity.name}</b><br/>\n      <p><b>Tipo: </b>{necessity.type.name}</p>\n      <p><b>Categoría: </b>{necessity.category.name}</p>\n      <p><b>Descripción: </b>{necessity.description}</p>\n    </Popup>\n  )\n}\n\n\nconst MapComponent = (props) => {\n  const styles = {\n    map: {\n      height: '60vh',\n      width: '100%'\n    }\n  }\n\n  const [dataObject, setDataObject] = useState(null)\n  const [matrixCoord, setMatrixCoord] = useState([])\n\n  const { data, generatePopupFunction, onClickMapHandler } = props;\n\n  useEffect(() => {\n    if (data) {\n      Promise.resolve(data)\n        .then(res => {\n          setDataObject(res)\n        })\n    } else {\n      setDataObject(null)\n      setMatrixCoord([])\n    }\n  }, [data])\n\n\n  const onClickMap = (event) => {\n    const { latlng, originalEvent } = event\n    setMatrixCoord([])\n    const coords = Object.values(latlng)\n    let onFlyMarker = {}\n    if (matrixCoord.length === 0) {\n      onFlyMarker = { location: { type: 'select', coordinates: [] } }\n    }\n    onFlyMarker = { location: { type: 'select', coordinates: coords } }\n\n    if (originalEvent.ctrlKey && matrixCoord.length > 0) {\n      if (typeof(matrixCoord[0]) === 'number') {\n        const fstCoords = [matrixCoord[0], matrixCoord[1]]\n        matrixCoord.splice(0,2)\n        matrixCoord.push(fstCoords)\n        setMatrixCoord(matrixCoord)\n      }\n      matrixCoord.push(coords)\n      setMatrixCoord(matrixCoord)\n      onClickMapHandler(matrixCoord)\n    } else {\n      setMatrixCoord(coords)\n      onClickMapHandler(coords)\n    }\n    setDataObject([onFlyMarker])\n  }\n\n\n  const calculateCenter = (dataObject) => {\n    const data = dataObject ? dataObject[0] : null\n\n    if (data && (data.location.type === 'marker' || data.location.type === 'circle' || data.location.type === 'select')) {\n      return data.location.coordinates\n    } else if (data) {\n      return getPolygonCenter(data.location.coordinates)\n    } else {\n      return mapCenter\n    }\n  }\n\n\n  const center = calculateCenter(dataObject)\n\n  return (\n    <Map\n      style={styles.map}\n      center={center}\n      zoom={12}\n      id=\"mapid\"\n      tap={true}\n      animate={true}\n      onClick={onClickMap}\n    >\n        {settingLayerMap(dataObject)}\n        { dataObject ?\n          dataObject.map(\n            data => {\n              const { location } = data\n\n              return  location.type === 'marker' ?\n                <Marker position={location.coordinates}>\n                  {generatePopupFunction(data)}\n                </Marker> :\n\n                location.type === 'rectangle' ?\n                  <Rectangle\n                    bounds={location.coordinates}\n                    color={location.properties.color}\n                  >\n                    {generatePopupFunction(data)}\n                  </Rectangle> :\n\n                location.type === 'select' ?\n                  <Marker\n                    draggable={true}\n                    position={location.coordinates}\n                  /> :\n\n                  location.type === 'circle' ?\n                  <CircleMarker\n                    center={location.coordinates}\n                    color={location.properties.color}\n                    radius={location.properties.radius}\n                  >\n                    {generatePopupFunction(data)}\n                  </CircleMarker> :\n\n                  location.type === 'polygon' ?\n                    <Polygon\n                      positions={location.coordinates}\n                      color={location.properties.color}\n                    >\n                      {generatePopupFunction(data)}\n                    </Polygon> : null\n            }\n          ) : null\n        }\n    </Map>\n    )\n}\nMapComponent.defaultProps = {\n  data: null,\n  generatePopupFunction: generateDefaultPopupFunction\n}\n\nexport default MapComponent;\n","export const mappingColors = [\n    '#0000FF',\n    '#FF0000',\n    '#FFFF00',\n    '#FF6600',\n    '#00FF00',\n    '#6600FF',\n    '#000000'\n]","import React, { useState } from 'react'\nimport { handlerInput } from '../../utils/utils.js'\nimport { mappingColors } from '../../utils/constants'\nimport { CirclePicker } from 'react-color'\n\nconst storage = window.localStorage\n\nconst NecessityForm = ({\n  necessityTypes,\n  coordFromMap,\n  categories,\n  onSelectNecessityType,\n  onHandlerSummit\n}) => {\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n  const { colors } = config\n\n  const styles = {\n    button__create: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor\n    }\n  }\n\n  const [necessityTypeValue, setNecessityTypeValue] = useState('')\n  const [categoryValue, setCategoryValue] = useState('')\n  const [descriptionValue, setDescriptionValue] = useState('')\n  const [nameValue, setNameValue] = useState('')\n  const [locationType, setLocationType] = useState('')\n  const [circleRadius, setCircleRadius] = useState(0)\n  const [shapeColor, setShapeColor] = useState('black')\n\n  const handlerNecessityTypeInput = (event) => {\n    const { value } = event.target\n    onSelectNecessityType(value)\n    setNecessityTypeValue(value)\n  }\n\n  const clearForm = () => {\n    setNecessityTypeValue(null)\n    setCategoryValue(null)\n    setDescriptionValue('')\n    setNameValue('')\n    setLocationType(null)\n    setCircleRadius(0)\n    setShapeColor('black')\n  }\n\n\n  const onClickSummitHandler = async () => {\n\n    const dataObject = {\n      name: nameValue,\n      type: necessityTypeValue,\n      description: descriptionValue,\n      category: categoryValue,\n      location: {\n        type: locationType,\n        coordinates: coordFromMap,\n        properties: {\n          color: shapeColor,\n          radius: circleRadius\n        }\n      }\n    }\n    await onHandlerSummit(dataObject)\n    clearForm()\n  }\n\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Nombre</label>\n        <input type=\"text\"\n          required\n          value={nameValue}\n          name=\"necessityName\"\n          className=\"form-control\"\n          placeholder=\"Ingrese un nombre del mapeo\"\n          aria-label=\"Nombre\"\n          aria-describedby=\"basic-addon1\"\n          onChange={e => handlerInput(e, setNameValue)}\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Descripción</label>\n        <textarea type=\"text\"\n          required\n          value={descriptionValue}\n          name=\"description\"\n          className=\"form-control\"\n          placeholder=\"Ingrese alguna descripción del mapeo\"\n          aria-label=\"Descripción\"\n          aria-describedby=\"basic-addon1\"\n          onChange={e => handlerInput(e, setDescriptionValue)}\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Tipo de Necesidad</label>\n        <select className=\"form-control\" onChange={e => handlerNecessityTypeInput(e)}>\n          <option value={null}>Elija un tipo de Necesidad</option>\n          {\n            necessityTypes.map(necessityType => {\n              const necessityTypeName = necessityType.name\n              return (\n                <option value={necessityTypeName} key={`${necessityTypeName}option`}>{necessityTypeName}</option>\n              )\n            })\n          }\n        </select>\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Categoría</label>\n        <select className=\"form-control\" onChange={e => handlerInput(e, setCategoryValue)} >\n          {\n            categories.length < 1 ?\n              <option value={null}>Primero elija un Tipo de Necesidad</option> :\n              <option value={null}>Elija una Categoría</option>\n          }\n          {\n            categories.map(category => {\n              const categoryName = category.name\n              return (\n                <option value={categoryName}>{categoryName}</option>\n              )\n            })\n          }\n        </select>\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"pull-left\">Tipo de Marca</label>\n        <select className=\"form-control\" onChange={e => handlerInput(e, setLocationType)}>\n          <option value={null}>Elija un tipo de marca a graficar</option>\n          <option value='marker'>Marca</option>\n          <option value='circle'>Círculo</option>\n          <option value='polygon'>Polígono</option>\n          <option value='rectangle'>Rectángulo</option>\n        </select>\n      </div>\n      {renderExtraPropertiesForLocationType(locationType, handlerInput, setShapeColor, setCircleRadius)}\n      <div className=\"mb-4\">\n        <button type=\"submit\"\n        className=\"btn btn-block btn-dark\"\n        style={styles.button__create}\n        onClick={onClickSummitHandler}>Cargar Mapeo</button>\n      </div>\n    </div>\n  )\n}\n\n\nconst renderExtraPropertiesForLocationType = (locationType, handlerInput, setShapeColor, setCircleRadius) => (\n  <div className=\"mb-3\">\n    {\n      locationType !== 'marker' ?\n        <div>\n          <label className=\"pull-left\">Color</label>\n          <br />\n          <div>\n            <CirclePicker\n              colors={mappingColors}\n              circleSize={28}\n              circleSpacing={8}\n              onChangeComplete={(color) => setShapeColor(color.hex)}\n              onChange={(color) => setShapeColor(color.hex)}\n            />\n          </div>\n        </div> : null\n    }\n    {\n      locationType === 'circle' ?\n        <div>\n          <label className=\"pull-left\">Radio</label>\n          <input type=\"number\"\n            required\n            name=\"circleRadius\"\n            className=\"form-control\"\n            placeholder=\"Ingrese el un número para indicar el radio del círculo\"\n            aria-label=\"Radio\"\n            aria-describedby=\"basic-addon1\"\n            onChange={e => handlerInput(e, setCircleRadius)}\n          />\n        </div> : null\n    }\n  </div>\n)\n\n\n\nexport default NecessityForm\n","import React, { useState, useEffect } from 'react'\n\n\nconst NecessityTable = ({ data, showNecessityIntoMap, colors}) => {\n  const [isData, setIsData] = useState(false)\n\n  const styles = {\n    items_color: {\n      color: colors.primaryText.color\n    }\n  }\n\n  useEffect(() => {\n      Promise.resolve(data)\n        .then(res => {\n          if (res) {\n            setIsData(true)\n          }\n        })\n  }, [data])\n\n  return (\n    <div className=\"necessities__table col-md-12\">\n      {\n        isData && data ?\n      <table className=\"table table-striped table-md\" style={styles.items_color}>\n        <tbody>\n          {\n            data.map(necessity => {\n              const idx = data.indexOf(necessity).toString()\n              return (\n                <tr id={`necessity:${necessity.id}`} key={`necessity${idx}`} style={styles.items_color}>\n                  <th onClick={() => showNecessityIntoMap(idx, necessity)}>{necessity.name}</th>\n                </tr>\n              )\n            })\n          }\n        </tbody>\n      </table>\n        :\n        <span className=\"container mt-5\">\n          <h5>No hay mapeos cargados</h5>\n          <h5>Hacer click en 'Nuevo Mapeo' para crear uno</h5>\n        </span>\n      }\n    </div>\n  )\n}\n\nexport default NecessityTable\n","import React, { useState } from 'react'\n\nconst storage = window.localStorage\n\nconst Filter = ({data, onSelectFilter, type, enable}) => {\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n  const { colors } = config\n\n  const styles = {\n    filter__button: {\n      backgroundColor: colors.backgroundColor,\n      color: colors.primaryText.color,\n      boderColor: `${colors.buttonColor.backgroundColor}`,\n      transition: '0.2s',\n      width: '100%'\n    },\n    dropdown_item: {\n      backgroundColor: colors.appBackgroundColor.backgroundColor,\n      color: colors.primaryText.color\n    }\n  }\n\n  const [dataSelected, setDataSelected] = useState(null)\n\n  const onCategorySelected = dataObject => {\n    setDataSelected(dataObject)\n    onSelectFilter(dataObject)\n  }\n\n  const getFilterButtonStyleClass = (enable) => {\n    return enable ? 'filter_button btn btn-lg dropdown-toggle' : 'btn btn-lg dropdown-toggle'\n  }\n\n  return (\n      <div className=\"dropdown btn-group dropright\">\n        <button className={getFilterButtonStyleClass(enable)}\n          type=\"button\" id=\"dropdownFilterButton\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          style={styles.filter__button}\n          disabled={!enable}\n        >\n          {\n            dataSelected ?\n              <span>{dataSelected}</span> :\n              <span>{type}</span>\n          }\n        </button>\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownFilterButton\" style={styles.dropdown_item}>\n          <button className=\"dropdown-item\" style={styles.dropdown_item} onClick={() => onCategorySelected(null)}>Todas</button>\n          {\n            data ?\n              data.map( dataObject =>\n                <button className=\"dropdown-item\" style={styles.dropdown_item} onClick={() => onCategorySelected(dataObject.name)}>{dataObject.name}</button>\n              ) : null\n          }\n        </div>\n      </div>\n  )\n}\n\nexport default Filter\n","import React, { useState, useContext, useEffect } from 'react'\nimport { AppContext } from '../store/Store.js'\nimport MapComponent from '../components/Map/MapComponent.js'\nimport NecessityForm from '../components/Necessity/NecessityForm.js'\nimport NecessityTable from '../components/Necessity/NecessityTable.js'\nimport Filter from '../components/Necessity/Filter.js'\nimport Navbar from '../components/Navbar.js'\nimport SideBarMenu from '../components/SideBarMenu.js'\nimport NecessityService from '../services/Necessity/NecessityService'\nimport CategoryService from '../services/Category/CategoryService.js'\nimport { disabledFilter } from '../utils/utils.js'\n\nconst necessityService = new NecessityService()\nconst categoryService = new CategoryService()\nconst storage = window.localStorage\n\nconst renderMiniNavbar = (mode, setMode, setDataToMap, colors) => {\n  const styles = {\n    nav__pill: {\n      backgroundColor: colors.backgroundColor,\n      color: colors.primaryText.color\n    },\n    active: {\n      backgroundColor: colors.buttonColor.backgroundColor,\n      color: colors.buttonColor.textColor,\n      border: `1px dashed ${colors.buttonColor.textColor}`\n    }\n  }\n\n  const getPillStyleClass = (pill) => {\n    if (mode !== pill) {\n      return styles.nav__pill\n    } else {\n      return styles.active\n    }\n  }\n\n\n  return (\n    <div className=\"col-md-12 mb-5\">\n      <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n        <li className=\"nav-item col-md-6\" role=\"presentation\">\n          <a className=\"nav-link active pill__button\" href=\"pill-table\" style={getPillStyleClass('table')}\n            id=\"pills-profile-tab\" data-toggle=\"pill\" onClick={() => { setMode('table'); setDataToMap(null)  }}\n            role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Necesidades\n          </a>\n        </li>\n        <li className=\"nav-item col-md-6\" role=\"presentation\">\n          <a className=\"nav-link pill__button\" href=\"pill-form\" style={getPillStyleClass('form')}\n            id=\"pills-home-tab\" data-toggle=\"pill\" onClick={() => { setMode('form'); setDataToMap(null) }}\n            role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">Nuevo Mapeo\n          </a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst Necessity = (props) => {\n\n  const [necessityList, setNecessityList] = useState(null);\n  const [dataToMap, setDataToMap] = useState(null)\n  const [mode, setMode] = useState('table')\n  const [coordinates, setCoordinates] = useState(null)\n  const [necessityTypes, setNecessityTypes] = useState([])\n  const [categories, setCategories] = useState([])\n  const [necessityTypesIsFetched, setNecessityTypesIsFetched] = useState(false)\n  const [title, setTitle] = useState('')\n  const [filterEnable, setFilterEnable] = useState([true, true])\n\n  const { state, dispatch } = useContext(AppContext)\n\n  const [publicHomeFilter, setPublicHomeFilter] = useState(null)\n  const settings = storage.getItem('styles')\n  const config = JSON.parse(settings)\n  const { colors } = config\n\n\n  const fetchNecessities = () => {\n    getNecessitiesData()\n  }\n\n\n  const fetchNecessityTypes = () => {\n    getNecessityTypesData()\n  }\n\n\n  const fetchCategoriesByNecessityType = (necessity) => {\n    const categoriesData = necessityTypes.find(\n      necess => necess.name === necessity\n    ).categories\n    setCategories(categoriesData)\n  }\n\n\n  const fetchCategories = async () => {\n    await categoryService.getCategories(setCategories, state)\n  }\n\n\n  const getNecessityTypesData = async () => {\n    await necessityService.getNecessityTypesData(setNecessityTypes, dispatch, state)\n  }\n\n\n  const getNecessitiesData = async () => {\n    await necessityService.getNecessitiesData(setNecessityList, dispatch, state)\n  }\n\n\n  const renderNecessityIntoMap = (idx, necessity) => {\n    setDataToMap([necessity])\n    setTitle(necessity)\n  }\n\n  const fetchNecessitiesByCategory = async (category) => {\n    await necessityService.getNecessitiesByCategory(category, setDataToMap, dispatch, state)\n  }\n\n  const showNecessitiesByCategory = async (category) => {\n    setDataToMap(await fetchNecessitiesByCategory(category))\n  }\n\n  const fetchFilteredData = async (category, necessityType) => {\n    if (category) {\n      setPublicHomeFilter(category)\n      showNecessitiesByCategory(category)\n      onCategoryFilterOption(category)\n    }\n    if (necessityType) {\n      setPublicHomeFilter(necessityType)\n      onNecessityTypeFilterOption(necessityType)\n    }\n  }\n\n\n  useEffect(() => {\n    if (!necessityList && !publicHomeFilter) {\n      fetchNecessities()\n      fetchCategories()\n    }\n  })\n\n  useEffect(() => {\n    const { category } = props.match.params\n    const { necessityType } = props.match.params\n    if (!dataToMap && !publicHomeFilter && (category || necessityType)) {\n      fetchFilteredData(category, necessityType)\n    }\n  })\n\n\n  useEffect(() => {\n    if (!necessityTypesIsFetched && necessityTypes.length < 1) {\n      fetchNecessityTypes()\n      setNecessityTypesIsFetched(true)\n    }\n  },[necessityTypes, necessityTypesIsFetched])\n\n\n  const getCategoriesByNecessityType = (necessity) => {\n    fetchCategoriesByNecessityType(necessity)\n  }\n\n\n  const onSaveNecessity = async (data) => {\n    setDataToMap(null)\n    await necessityService.saveNecessity(data, dispatch, necessityList, setNecessityList, setDataToMap, state)\n  }\n\n  const onCategoryFilterOption = async (category) => {\n    disabledFilter(category, filterEnable, setFilterEnable, 1)\n    await necessityService.onCategoryFilterOption(category, state, setNecessityList)\n  }\n\n\n  const onNecessityTypeFilterOption = async (necessityType) => {\n    disabledFilter(necessityType, filterEnable, setFilterEnable, 0)\n    await necessityService.onNecessityTypeFilterOption(necessityType, setNecessityList, state)\n  }\n\n\n const styles = {\n   body__title_background: {\n     color: colors.buttonColor.textColor,\n     backgroundColor: colors.navBarOptions.backgroundColor,\n     filter: 'opacity(85%)'\n   }\n }\n\n  return (\n    <div>\n      <Navbar />\n      <SideBarMenu />\n      <div className=\"body__title\" style={styles.body__title_background}>\n        <h2>Necesidades</h2>\n      </div>\n      <div className=\"container-fluid home__body\">\n        <div className=\"row mt-5\">\n          <div className=\"row col-md-12 mb-3 top_body\">\n            <div className=\"col-md-2 pb-4\">\n              <Filter data={categories} onSelectFilter={onCategoryFilterOption} type={'Categoría'} enable={filterEnable[0]}/>\n            </div>\n            <div className=\"col-md-2 pb-4\">\n              <Filter data={necessityTypes} onSelectFilter={onNecessityTypeFilterOption} type={'Tipo'} enable={filterEnable[1]}/>\n            </div>\n            <div className=\"col-md-8 pb-3 necessity-info\">\n              <div className=\"col-md-8\">\n                <h4>{title.name}</h4>\n              </div>\n              <div className=\"col-md-8 pt-1\">\n                <p>{title.description}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            {renderMiniNavbar(mode, setMode, setDataToMap, colors)}\n            {\n              mode === 'form' ?\n              <NecessityForm\n                necessityTypes={necessityTypes}\n                categories={categories}\n                onSelectNecessityType={getCategoriesByNecessityType}\n                coordFromMap={coordinates}\n                onHandlerSummit={onSaveNecessity}\n              /> :\n              <NecessityTable\n                data={necessityList}\n                showNecessityIntoMap={renderNecessityIntoMap}\n                colors={colors}\n              />\n            }\n          </div>\n          <div className=\"col col-md-8\">\n            <MapComponent data={dataToMap} onClickMapHandler={setCoordinates} />\n            <p className='text-muted text-small mt-2'>\n              Para elegir varios puntos manten apretada la tecla <kbd>Ctrl</kbd> al momento de hacer los clicks\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Necessity;\n","import { selectUserAuthToken } from '../../store/selectors/user.js'\nimport api from '../../api'\nimport {\n    createShowSuccessNotificationAction,\n    createShowErrorNotificationAction\n} from '../../store/actions/notification.js'\n\nclass NecessityService {\n\n    static getHeaders (state) {\n        return {\n          'Auth': selectUserAuthToken(state),\n          'Content-Type': 'application/json'\n        }\n    }\n\n    async getNecessityTypesData (setNecessityTypes, dispatch, state) {\n        const headers = NecessityService.getHeaders(state)\n\n        const onSuccess = async (response) => {\n          const data = await response\n          setNecessityTypes(data)\n        }\n\n        const onError = async (error) => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n\n        await api.getNecessityTypes(headers, onSuccess, onError)\n    }\n\n    async getNecessitiesData (setNecessityList, dispatch, state) {\n        const headers = NecessityService.getHeaders(state)\n\n        const onSuccess = async (response) => {\n          const data = await response\n          setNecessityList(data)\n        }\n\n        const onError = async (error) => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n\n        await api.getNecessities(headers, onSuccess, onError)\n    }\n\n    async saveNecessity (data, dispatch, necessityList, setNecessityList, setDataToMap, state) {\n        const headers = NecessityService.getHeaders(state)\n\n        const onSuccess = async (response) => {\n          const newNecessity = await response\n          dispatch(createShowSuccessNotificationAction({\n            header: '¡Necesidad Creada!',\n            message: 'El mapeo se ha creado con éxito'\n          }))\n\n          necessityList.push(newNecessity)\n          setNecessityList(necessityList)\n          setDataToMap(null)\n        }\n\n        const onError = async (error) => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n\n        await api.createNecessity(data, headers, onSuccess, onError)\n    }\n\n    async getNecessitiesByCategory (category, setData, dispatch, state) {\n        const headers = NecessityService.getHeaders(state)\n\n        const onSuccess = async (response) => {\n          const data = await response\n          setData(data)\n        }\n\n        const onError = async (error) => {\n          dispatch(createShowErrorNotificationAction({\n            header: '¡Error!',\n            message: error.message\n          }))\n        }\n\n        await api.getNecessitiesByCategory(headers, onSuccess, onError, category)\n    }\n\n    async onCategoryFilterOption (category, state, setNecessityList) {\n      const headers = NecessityService.getHeaders(state)\n\n      const onSuccess = response => {\n        setNecessityList(response)\n      }\n\n      if (!category) {\n        await api.getNecessities(headers, onSuccess)\n      } else {\n        await api.getNecessitiesByCategory(category, headers, onSuccess)\n      }\n    }\n\n    async onNecessityTypeFilterOption (necessityType, setNecessityList, state) {\n      const headers = NecessityService.getHeaders(state)\n\n      const onSuccess = response => {\n        setNecessityList(response)\n      }\n\n      if (!necessityType) {\n        await api.getNecessities(headers, onSuccess)\n      } else {\n        await api.getNecessitiesByType(necessityType, headers, onSuccess)\n      }\n    }\n}\n\nexport default NecessityService\n","import {  SETTINGS_TYPE } from '../reducers/settings'\n\nexport const createChangeSettingsStylesAction = config => ({\n  type: SETTINGS_TYPE.CHANGE_SETTINGS_STYLES,\n  payload: config\n})\n\nexport const SettingsAction = {\n  createChangeSettingsStylesAction\n}\n","import React, { useState } from 'react'\nimport { ChromePicker } from 'react-color'\n\nconst NavbarSettings = ({ pickerButtonClass, onColorValuePicked }) => {\n\n  const [pickedColor1, setPickedColor1] = useState(pickerButtonClass.backgroundColor)\n  const [pickedColor2, setPickedColor2] = useState(pickerButtonClass.backgroundColor)\n  const [pickedColor3, setPickedColor3] = useState(pickerButtonClass.backgroundColor)\n  const [showPicker1, setShowPicker1] = useState(false)\n  const [showPicker2, setShowPicker2] = useState(false)\n  const [showPicker3, setShowPicker3] = useState(false)\n  let objectData = {\n    navBarOptions: {\n      activeColor: null,\n      backgroundColor: null,\n      inactiveColor: null\n    }\n  }\n\n  const onPickedChange = (color, setColorFunction) => {\n    const { hex } = color\n    setColorFunction(hex)\n  }\n\n  const onPickedChangeComplete = (color, element, option) => {\n    objectData[element][option] = color.hex\n    onColorValuePicked(color.hex, `colors.${element}.${option}`)\n  }\n\n\n  return (\n    <div>\n      <h5>Navbar</h5>\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Background</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor1} disabled/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-small\"\n              style={pickerButtonClass}\n              onClick={() => setShowPicker1(!showPicker1)}>\n              { showPicker1 ?\n                  <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                  <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n              }\n            </button>\n          </div>\n        </div>\n        {\n          showPicker1 ?\n          <ChromePicker\n            color={pickedColor1}\n            onChangeComplete={(color) => onPickedChangeComplete(color, 'navBarOptions', 'backgroundColor')}\n            onChange={(color) => onPickedChange(color, setPickedColor1)}\n          /> : null\n        }\n      </div>\n\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Elemento Activo</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor2} disabled/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-small\"\n              style={pickerButtonClass}\n              onClick={() => setShowPicker2(!showPicker2)}>\n              {showPicker2 ?\n                  <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                  <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n              }\n            </button>\n          </div>\n        </div>\n        {\n          showPicker2 ?\n          <ChromePicker\n            color={pickedColor2}\n            onChangeComplete={(color) => onPickedChangeComplete(color, 'navBarOptions', 'activeColor')}\n            onChange={(color) => onPickedChange(color, setPickedColor2)}\n          /> : null\n        }\n      </div>\n\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Elemento Inactivo</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor3} disabled/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-small\"\n              style={pickerButtonClass}\n              onClick={() => setShowPicker3(!showPicker3)}>\n              {showPicker3 ?\n                  <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                  <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n              }\n            </button>\n          </div>\n        </div>\n        {\n          showPicker3 ?\n          <ChromePicker\n            color={pickedColor3}\n            onChangeComplete={(color) => onPickedChangeComplete(color, 'navBarOptions', 'inactiveColor')}\n            onChange={(color) => onPickedChange(color, setPickedColor3)}\n          /> : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default NavbarSettings\n","import React, { useState } from 'react'\nimport { ChromePicker } from 'react-color'\n\nconst ButtonSettings = ({ pickerButtonClass, onColorValuePicked }) => {\n\n  const [pickedColor1, setPickedColor1] = useState(pickerButtonClass.backgroundColor)\n  const [pickedColor2, setPickedColor2] = useState(pickerButtonClass.backgroundColor)\n  const [showPicker1, setShowPicker1] = useState(false)\n  const [showPicker2, setShowPicker2] = useState(false)\n  let objectData = {\n    buttonColor: {\n      backgroundColor: null,\n      textColor: null\n    }\n  }\n\n  const onPickedChange = (color, setColorFunction) => {\n    const { hex } = color\n    setColorFunction(hex)\n  }\n\n  const onPickedChangeComplete = (color, element, option) => {\n    objectData[element][option] = color.hex\n    onColorValuePicked(color.hex, `colors.${element}.${option}`)\n  }\n\n\n  return (\n    <div>\n      <h5>Botones</h5>\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Background</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor1} disabled/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-small\"\n              style={pickerButtonClass}\n              onClick={() => setShowPicker1(!showPicker1)}>\n              {showPicker1 ?\n                  <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                  <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n              }\n            </button>\n          </div>\n        </div>\n        {\n          showPicker1 ?\n          <ChromePicker\n            color={pickedColor1}\n            onChangeComplete={(color) => onPickedChangeComplete(color, 'buttonColor', 'backgroundColor')}\n            onChange={(color) => onPickedChange(color, setPickedColor1)}\n          /> : null\n        }\n      </div>\n\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Texto</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor2} disabled/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-small\"\n              style={pickerButtonClass}\n              onClick={() => setShowPicker2(!showPicker2)}>\n              {showPicker2 ?\n                  <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                  <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n              }\n            </button>\n          </div>\n        </div>\n        {\n          showPicker2 ?\n          <ChromePicker\n            color={pickedColor2}\n            onChangeComplete={(color) => onPickedChangeComplete(color, 'buttonColor', 'textColor')}\n            onChange={(color) => onPickedChange(color, setPickedColor2)}\n          /> : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default ButtonSettings\n","import React, { useState } from 'react'\nimport { ChromePicker } from 'react-color'\n\nconst PageSettings = ({ pickerButtonClass, onColorValuePicked }) => {\n\n  const [pickedColor1, setPickedColor1] = useState(pickerButtonClass.backgroundColor)\n  const [pickedColor2, setPickedColor2] = useState(pickerButtonClass.backgroundColor)\n  const [pickedColor3, setPickedColor3] = useState('')\n  const [pickedColor4, setPickedColor4] = useState(pickerButtonClass.backgroundColor)\n\n  const [showPicker1, setShowPicker1] = useState(false)\n  const [showPicker2, setShowPicker2] = useState(false)\n  const [showPicker4, setShowPicker4] = useState(false)\n\n\n  let objectData = {\n    appBackgroundColor: {\n      backgroundColor: null\n    },\n    primaryText: {\n      color: null\n    },\n    secondaryText: {\n      color: null\n    },\n    appLogo: null,\n    favicon: null,\n    name: null\n  }\n\n  const onPickedChange = (value, setColorFunction, input) => {\n\n    if (input) {\n      const inputKeys = input.split('.')\n      setColorFunction(value.target.value)\n      onPickedChangeComplete(value.target.value, inputKeys[1])\n    } else {\n      setColorFunction(value.hex)\n    }\n  }\n\n  const onPickedChangeComplete = (value, element, option) => {\n    option ? objectData[element][option] = value.hex : objectData[element] = value.hex\n    if (option) {\n      onColorValuePicked(value.hex, `colors.${element}.${option}`)\n    } else {\n      onColorValuePicked(value, `${element}`)\n    }\n  }\n\n\n  return (\n    <div>\n      <h5>Página</h5>\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Page Background</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor1} disabled/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-small\"\n              style={pickerButtonClass}\n              onClick={() => setShowPicker1(!showPicker1)}>\n              {showPicker1 ?\n                  <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                  <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n              }\n            </button>\n          </div>\n        </div>\n        {\n          showPicker1 ?\n          <ChromePicker\n            color={pickedColor1}\n            onChangeComplete={(color) => onPickedChangeComplete(color, 'appBackgroundColor', 'backgroundColor')}\n            onChange={(color) => onPickedChange(color, setPickedColor1)}\n          /> : null\n        }\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Texto Principal</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor2} disabled/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-small\"\n              style={pickerButtonClass}\n              onClick={() => setShowPicker2(!showPicker2)}>\n              {showPicker2 ?\n                  <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                  <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n              }\n            </button>\n          </div>\n        </div>\n        {\n          showPicker2 ?\n          <ChromePicker\n            color={pickedColor3}\n            onChangeComplete={(color) => onPickedChangeComplete(color, 'primaryText', 'color')}\n            onChange={(color) => onPickedChange(color, setPickedColor2)}\n          /> : null\n        }\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" style={pickerButtonClass}>Nombre</label>\n          <input type=\"text\" className=\"form-control\" value={pickedColor3}\n            onChange={(e) => onPickedChange(e, setPickedColor3, 'input.name')}\n          />\n        </div>\n      </div>\n      <div className=\"input-group mb-3\">\n        <label className=\"input-group-text\" style={pickerButtonClass}>Texto Secundario</label>\n        <input type=\"text\" className=\"form-control\" value={pickedColor4} disabled/>\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-small\"\n            style={pickerButtonClass}\n            onClick={() => setShowPicker4(!showPicker4)}>\n            {showPicker4 ?\n                <i class=\"fa fa-times\" aria-hidden=\"true\"></i> :\n                <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\n            }\n          </button>\n        </div>\n      </div>\n      {\n        showPicker4 ?\n        <ChromePicker\n          color={pickedColor4}\n          onChangeComplete={(color) => onPickedChangeComplete(color, 'secondaryText', 'color')}\n          onChange={(color) => onPickedChange(color, setPickedColor4)}\n        /> : null\n      }\n    </div>\n  )\n}\n\nexport default PageSettings\n","import React, { useState, useContext, useEffect } from 'react'\nimport { AppContext } from '../store/Store.js'\nimport Navbar from '../components/Navbar.js'\nimport SideBarMenu from '../components/SideBarMenu.js'\nimport { createChangeSettingsStylesAction } from '../store/actions/settings.js'\nimport { selectSettingsState } from '../store/selectors/settings.js'\n\nimport NavbarSettings from '../components/Settings/NavbarSettings.js'\nimport ButtonSettings from '../components/Settings/ButtonSettings.js'\nimport PageSettings from '../components/Settings/PageSettings.js'\n\n\nconst storage = window.localStorage\n\nconst Setting = () => {\n  const initialSettings = {\n    appLogo: null,\n    favicon: null,\n    colors: {\n      appBackgroundColor: {\n        backgroundColor: null\n      },\n      navBarOptions: {\n        activeColor: null,\n        backgroundColor: null,\n        inactiveColor: null\n      },\n      panelBackgroundColor: {\n        backgroundColor: null\n      },\n      buttonColor: {\n        backgroundColor: null,\n        textColor: null\n      },\n      primaryText: {\n        color: null\n      },\n      secondaryText: {\n        color: null\n      }\n    },\n    name: null,\n  }\n  const { state, dispatch } = useContext(AppContext)\n  const { config } = selectSettingsState(state)\n  const storageSettings = JSON.parse(storage.getItem('styles'))\n  const [localSettings, setLocalSettings] = useState(initialSettings)\n\n\n  useEffect(() => {\n    setLocalSettings(JSON.parse(storage.getItem('styles')))\n  }, [config])\n\n  const styles = {\n    body__title_background: {\n      color: storageSettings.colors.buttonColor.textColor,\n      backgroundColor: storageSettings.colors.navBarOptions.backgroundColor,\n      filter: 'opacity(85%)'\n    },\n    picker__button: {\n      backgroundColor: storageSettings.colors.buttonColor.backgroundColor,\n      color: storageSettings.colors.buttonColor.textColor\n    },\n    home_body: {\n      backgroundColor: storageSettings.colors.appBackgroundColor.backgroundColor\n    }\n  }\n\n\n  const saveSettings = settings => {\n    dispatch(createChangeSettingsStylesAction(settings))\n    storage.setItem('styles', JSON.stringify(settings))\n  }\n\n  const onColorPicked = (value, component) => {\n    const componentKeys = component.split('.')\n    componentKeys.length > 1 ?\n      localSettings[componentKeys[0]][componentKeys[1]][componentKeys[2]] = value :\n      localSettings[componentKeys[0]] = value\n    setLocalSettings(localSettings)\n    saveSettings(localSettings)\n  }\n\n\n\n  return (\n    <div>\n      <Navbar />\n      <SideBarMenu />\n      <div className=\"body__title\" style={styles.body__title_background}>\n        <h2>Personalización de Colores</h2>\n      </div>\n      <div id=\"router\" className=\"home__body container-fluid col col-md-12\" style={styles.home_body}>\n        <div className=\"row settings__body\">\n          <div className=\"col-md-6 pl-5\">\n            <NavbarSettings\n              pickerButtonClass={styles.picker__button}\n              onColorValuePicked={onColorPicked}\n            />\n          </div>\n          <div className=\"col-md-6 pl-5\">\n            <ButtonSettings\n              pickerButtonClass={styles.picker__button}\n              onColorValuePicked={onColorPicked}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <PageSettings\n              pickerButtonClass={styles.picker__button}\n              onColorValuePicked={onColorPicked}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Setting\n","import React, { useContext, useState } from 'react'\nimport { AppContext } from '../store/Store.js'\nimport { selectNotificationState } from '../store/selectors/notification.js'\nimport { closeNotificationAction } from '../store/actions/notification.js'\n\n\nexport const Notification = () => {\n\n  const { state, dispatch } = useContext(AppContext)\n  const { showNotification, header, message, color } = selectNotificationState(state)\n\n  const hideNotification = () => {\n    if (showNotification) {\n      setTimeout(function () {\n        dispatch(closeNotificationAction(selectNotificationState(state)))\n      }, 2500);\n    }\n  }\n\n  const getNotificationType = () => {\n    const types = [\"success-alert\", \"error-alert\"]\n    return color === 'success' ? types[0] : types[1]\n  }\n\n  useState(() => {\n    hideNotification()\n  },[showNotification])\n\n  return (\n    <div className={\"notification \" + getNotificationType()} role=\"alert\">\n      <h5 className=\"alert-heading\">{header}</h5>\n      <p>{message}</p>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Redirect } from 'react-router'\nimport { AppContext } from '../store/Store.js'\n\nconst AuthProvider = ({ Component, ...props }) => {\n  const { state } = useContext(AppContext)\n\n  return state.userState.isLogged ? (\n    <div id=\"router\">\n      <Component {...props} />\n    </div>\n  ) : (\n    <Redirect to={\"/login\"} />\n  )\n}\n\nexport default AuthProvider\n","const customizationObj = JSON.parse(process.env.REACT_APP_CUSTOMIZATION)\nlet config = null\n\nif (customizationObj) {\n  const {\n    appId,\n    name,\n    favicon,\n    navBarOptions: {\n      navActiveColor: activeColor,\n      navBackgroundColor: backgroundColor,\n      navInactiveColor: inactiveColor\n    },\n    colors: {\n      backgroundColor: appBackgroundColor,\n      primaryText,\n      secondaryText\n    },\n    appLogo,\n  } = customizationObj\n\n\n  config = {\n    appId: appId || 'kintun.wingu.org',\n    appLogo: appLogo || '/mapping-platform-logo.svg',\n    favicon: favicon,\n    colors: {\n      appBackgroundColor: {\n        backgroundColor: appBackgroundColor || '#f3f3f3'\n      },\n      navBarOptions: {\n        activeColor: activeColor || '#f3f3f3',\n        backgroundColor: backgroundColor || '#343a40',\n        inactiveColor: inactiveColor || '#808080'\n      },\n      panelBackgroundColor: {\n        backgroundColor: backgroundColor || '#343a40'\n      },\n      buttonColor: {\n        backgroundColor: backgroundColor || '#343a40',\n        textColor: activeColor || '#f3f3f3'\n      },\n      primaryText: {\n        color: primaryText || '#343a40'\n      },\n      secondaryText: {\n        color: secondaryText || '#f3f3f3'\n      }\n    },\n    name: name,\n  }\n\n  const setFaviconAndTitle = (config) => {\n    let link = document.querySelector('link[rel*=\"icon\"]') || document.createElement('link')\n    let title = document.getElementsByTagName('title')[0] || {}\n\n    title.textContent = config.name\n    link.href = config.favicon\n    link.type = 'image/x-icon'\n    link.rel = 'shortcut icon'\n    document.getElementsByTagName('head')[0].appendChild(link)\n  }\n  setFaviconAndTitle(config)\n\n}\nconst storage = window.localStorage\nconst storagedSettings = storage.getItem('styles')\nif (!storagedSettings) {\n  storage.setItem('styles', JSON.stringify(config))\n}\nexport default config\n","import React, { useContext, useEffect } from 'react';\nimport { AppContext } from './store/Store.js'\nimport { selectNotificationState } from './store/selectors/notification.js'\nimport { selectSettingsState } from './store/selectors/settings.js'\nimport Login from './pages/Login.js'\nimport BaseHome from './pages/BaseHome.js'\nimport PublicHome from './pages/PublicHome.js'\nimport Category from './pages/Category.js'\nimport NecessityType from './pages/NecessityType.js'\nimport Necessity from './pages/Necessity.js'\nimport Setting from './pages/Setting.js'\nimport { Notification } from './components/Notification.js'\nimport AuthProvider from './components/AuthProvider.js'\nimport { createChangeSettingsStylesAction } from './store/actions/settings.js'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport { changeAppName } from './utils/utils.js'\nimport configFile from './config.js'\n\nconst storage = window.localStorage\n\nconst App = () => {\n\n  const { state, dispatch } = useContext(AppContext)\n  const { showNotification } = selectNotificationState(state)\n  const { config } = selectSettingsState(state)\n  if (!config.appLogo) {\n    const settings = storage.getItem('styles')\n    dispatch(createChangeSettingsStylesAction(JSON.parse(settings)))\n  }\n\n  useEffect(() => {\n    const settings = storage.getItem('styles')\n    if (!config.appLogo) {\n      dispatch(createChangeSettingsStylesAction(JSON.parse(settings)))\n    }\n    if (config.name !== configFile.name) {\n      changeAppName(config.name)\n    }\n  }, [config])\n\n  const styles = {\n    body_app : {\n      backgroundColor: config.colors.appBackgroundColor.backgroundColor,\n      color: config.colors.primaryText.color\n    }\n  }\n\n  return (\n    <div className=\"App\" style={styles.body_app}>\n      <div>\n        <Router>\n          <Switch>\n            <Route\n              path=\"/login\"\n              exact={true}\n              render={props => (\n                <div id=\"router\">\n                  <Login />\n                </div>\n              )}\n            />\n            <Route\n              path=\"/\"\n              exact={true}\n              render={props => (\n                <PublicHome />\n              )}\n            />\n            <Route\n              path=\"/home\"\n              exact={true}\n              render={props => (\n                <AuthProvider Component={BaseHome} {...props} />\n              )}\n            />\n            <Route\n              path=\"/necessity-types\"\n              exact={true}\n              render={props => (\n                <AuthProvider Component={NecessityType} {...props}/>\n              )}\n            />\n            <Route\n              path=\"/categories\"\n              exact={true}\n              render={props => (\n                <AuthProvider Component={Category} {...props}/>\n              )}\n            />\n            <Route\n              path=\"/necessities\"\n              exact={true}\n              render={props => (\n                <Necessity {...props} />\n              )}\n            />\n            <Route path=\"/necessities/:category\" exact={true}\n              render={(props) => (\n                <Necessity {...props}/>\n                )}\n            >\n            </Route>\n            <Route path=\"/necessities/type/:necessityType\" exact={true}\n              render={(props) => (\n                <Necessity {...props}/>\n                )}\n            >\n            </Route>\n            <Route path=\"/settings\" exact={true}\n              render={(props) => (\n                <AuthProvider Component={Setting} {...props}/>\n              )}\n            >\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n      {\n        showNotification ?\n          <Notification /> : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery';\nimport 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { AppContextProvider } from \"./store/Store\";\n\nReactDOM.render(\n    <AppContextProvider>\n      <App />\n    </AppContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}